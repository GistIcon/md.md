Using worker: worker-linux-docker-f674cd0f.prod.travis-ci.org:travis-linux-8

travis_fold:start:system_info
[0K[33;1mBuild system information[0m
Build language: ruby
[34m[1mBuild image provisioning date and time[0m
Thu Feb  5 15:09:33 UTC 2015
[34m[1mOperating System Details[0m
Distributor ID:	Ubuntu
Description:	Ubuntu 12.04.5 LTS
Release:	12.04
Codename:	precise
[34m[1mLinux Version[0m
3.13.0-29-generic
[34m[1mCookbooks Version[0m
a68419e https://github.com/travis-ci/travis-cookbooks/tree/a68419e
[34m[1mGCC version[0m
gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3
Copyright (C) 2011 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

[34m[1mLLVM version[0m
clang version 3.4 (tags/RELEASE_34/final)
Target: x86_64-unknown-linux-gnu
Thread model: posix
[34m[1mPre-installed Ruby versions[0m
ruby-1.9.3-p551
[34m[1mPre-installed Node.js versions[0m
v0.10.36
[34m[1mPre-installed Go versions[0m
1.4.1
[34m[1mRedis version[0m
redis-server 2.8.19
[34m[1mriak version[0m
2.0.2
[34m[1mMongoDB version[0m
MongoDB 2.4.12
[34m[1mCouchDB version[0m
couchdb 1.6.1
[34m[1mNeo4j version[0m
1.9.4
[34m[1mRabbitMQ Version[0m
3.4.3
[34m[1mElasticSearch version[0m
1.4.0
[34m[1mInstalled Sphinx versions[0m
2.0.10
2.1.9
2.2.6
[34m[1mDefault Sphinx version[0m
2.2.6
[34m[1mInstalled Firefox version[0m
firefox 31.0esr
[34m[1mPhantomJS version[0m
1.9.8
[34m[1mant -version[0m
Apache Ant(TM) version 1.8.2 compiled on December 3 2011
[34m[1mmvn -version[0m
Apache Maven 3.2.5 (12a6b3acb947671f09b81f49094c53f426d8cea1; 2014-12-14T17:29:23+00:00)
Maven home: /usr/local/maven
Java version: 1.7.0_76, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-7-oracle/jre
Default locale: en_US, platform encoding: ANSI_X3.4-1968
OS name: "linux", version: "3.13.0-29-generic", arch: "amd64", family: "unix"
travis_fold:end:system_info
[0K
travis_fold:start:git.checkout
[0Ktravis_time:start:0f85aba1
[0K$ git clone --depth=50 https://github.com/travis-ci/travis-core.git travis-ci/travis-core
Cloning into 'travis-ci/travis-core'...
remote: Counting objects: 2097, done.[K
remote: Compressing objects:   0% (1/1411)   [K
remote: Compressing objects:   1% (15/1411)   [K
remote: Compressing objects:   2% (29/1411)   [K
remote: Compressing objects:   3% (43/1411)   [K
remote: Compressing objects:   4% (57/1411)   [K
remote: Compressing objects:   5% (71/1411)   [K
remote: Compressing objects:   6% (85/1411)   [K
remote: Compressing objects:   7% (99/1411)   [K
remote: Compressing objects:   8% (113/1411)   [K
remote: Compressing objects:   9% (127/1411)   [K
remote: Compressing objects:  10% (142/1411)   [K
remote: Compressing objects:  11% (156/1411)   [K
remote: Compressing objects:  12% (170/1411)   [K
remote: Compressing objects:  13% (184/1411)   [K
remote: Compressing objects:  14% (198/1411)   [K
remote: Compressing objects:  15% (212/1411)   [K
remote: Compressing objects:  16% (226/1411)   [K
remote: Compressing objects:  17% (240/1411)   [K
remote: Compressing objects:  18% (254/1411)   [K
remote: Compressing objects:  19% (269/1411)   [K
remote: Compressing objects:  20% (283/1411)   [K
remote: Compressing objects:  21% (297/1411)   [K
remote: Compressing objects:  22% (311/1411)   [K
remote: Compressing objects:  23% (325/1411)   [K
remote: Compressing objects:  24% (339/1411)   [K
remote: Compressing objects:  25% (353/1411)   [K
remote: Compressing objects:  26% (367/1411)   [K
remote: Compressing objects:  27% (381/1411)   [K
remote: Compressing objects:  28% (396/1411)   [K
remote: Compressing objects:  29% (410/1411)   [K
remote: Compressing objects:  30% (424/1411)   [K
remote: Compressing objects:  31% (438/1411)   [K
remote: Compressing objects:  32% (452/1411)   [K
remote: Compressing objects:  33% (466/1411)   [K
remote: Compressing objects:  34% (480/1411)   [K
remote: Compressing objects:  35% (494/1411)   [K
remote: Compressing objects:  36% (508/1411)   [K
remote: Compressing objects:  37% (523/1411)   [K
remote: Compressing objects:  38% (537/1411)   [K
remote: Compressing objects:  39% (551/1411)   [K
remote: Compressing objects:  40% (565/1411)   [K
remote: Compressing objects:  41% (579/1411)   [K
remote: Compressing objects:  42% (593/1411)   [K
remote: Compressing objects:  43% (607/1411)   [K
remote: Compressing objects:  44% (621/1411)   [K
remote: Compressing objects:  45% (635/1411)   [K
remote: Compressing objects:  46% (650/1411)   [K
remote: Compressing objects:  47% (664/1411)   [K
remote: Compressing objects:  48% (678/1411)   [K
remote: Compressing objects:  49% (692/1411)   [K
remote: Compressing objects:  50% (706/1411)   [K
remote: Compressing objects:  51% (720/1411)   [K
remote: Compressing objects:  52% (734/1411)   [K
remote: Compressing objects:  53% (748/1411)   [K
remote: Compressing objects:  54% (762/1411)   [K
remote: Compressing objects:  55% (777/1411)   [K
remote: Compressing objects:  56% (791/1411)   [K
remote: Compressing objects:  57% (805/1411)   [K
remote: Compressing objects:  58% (819/1411)   [K
remote: Compressing objects:  59% (833/1411)   [K
remote: Compressing objects:  60% (847/1411)   [K
remote: Compressing objects:  61% (861/1411)   [K
remote: Compressing objects:  62% (875/1411)   [K
remote: Compressing objects:  63% (889/1411)   [K
remote: Compressing objects:  64% (904/1411)   [K
remote: Compressing objects:  65% (918/1411)   [K
remote: Compressing objects:  66% (932/1411)   [K
remote: Compressing objects:  67% (946/1411)   [K
remote: Compressing objects:  68% (960/1411)   [K
remote: Compressing objects:  69% (974/1411)   [K
remote: Compressing objects:  70% (988/1411)   [K
remote: Compressing objects:  71% (1002/1411)   [K
remote: Compressing objects:  72% (1016/1411)   [K
remote: Compressing objects:  73% (1031/1411)   [K
remote: Compressing objects:  74% (1045/1411)   [K
remote: Compressing objects:  75% (1059/1411)   [K
remote: Compressing objects:  76% (1073/1411)   [K
remote: Compressing objects:  77% (1087/1411)   [K
remote: Compressing objects:  78% (1101/1411)   [K
remote: Compressing objects:  79% (1115/1411)   [K
remote: Compressing objects:  80% (1129/1411)   [K
remote: Compressing objects:  81% (1143/1411)   [K
remote: Compressing objects:  82% (1158/1411)   [K
remote: Compressing objects:  83% (1172/1411)   [K
remote: Compressing objects:  84% (1186/1411)   [K
remote: Compressing objects:  85% (1200/1411)   [K
remote: Compressing objects:  86% (1214/1411)   [K
remote: Compressing objects:  87% (1228/1411)   [K
remote: Compressing objects:  88% (1242/1411)   [K
remote: Compressing objects:  89% (1256/1411)   [K
remote: Compressing objects:  90% (1270/1411)   [K
remote: Compressing objects:  91% (1285/1411)   [K
remote: Compressing objects:  92% (1299/1411)   [K
remote: Compressing objects:  93% (1313/1411)   [K
remote: Compressing objects:  94% (1327/1411)   [K
remote: Compressing objects:  95% (1341/1411)   [K
remote: Compressing objects:  96% (1355/1411)   [K
remote: Compressing objects:  97% (1369/1411)   [K
remote: Compressing objects:  98% (1383/1411)   [K
remote: Compressing objects:  99% (1397/1411)   [K
remote: Compressing objects: 100% (1411/1411)   [K
remote: Compressing objects: 100% (1411/1411), done.[K
Receiving objects:   0% (1/2097)   
Receiving objects:   1% (21/2097)   
Receiving objects:   2% (42/2097)   
Receiving objects:   3% (63/2097)   
Receiving objects:   4% (84/2097)   
Receiving objects:   5% (105/2097)   
Receiving objects:   6% (126/2097)   
Receiving objects:   7% (147/2097)   
Receiving objects:   8% (168/2097)   
Receiving objects:   9% (189/2097)   
Receiving objects:  10% (210/2097)   
Receiving objects:  11% (231/2097)   
Receiving objects:  12% (252/2097)   
Receiving objects:  13% (273/2097)   
Receiving objects:  14% (294/2097)   
Receiving objects:  15% (315/2097)   
Receiving objects:  16% (336/2097)   
Receiving objects:  17% (357/2097)   
Receiving objects:  18% (378/2097)   
Receiving objects:  19% (399/2097)   
Receiving objects:  20% (420/2097)   
Receiving objects:  21% (441/2097)   
Receiving objects:  22% (462/2097)   
Receiving objects:  23% (483/2097)   
Receiving objects:  24% (504/2097)   
Receiving objects:  25% (525/2097)   
Receiving objects:  26% (546/2097)   
Receiving objects:  27% (567/2097)   
Receiving objects:  28% (588/2097)   
Receiving objects:  29% (609/2097)   
Receiving objects:  30% (630/2097)   
Receiving objects:  31% (651/2097)   
Receiving objects:  32% (672/2097)   
Receiving objects:  33% (693/2097)   
Receiving objects:  34% (713/2097)   
Receiving objects:  35% (734/2097)   
Receiving objects:  36% (755/2097)   
Receiving objects:  37% (776/2097)   
Receiving objects:  38% (797/2097)   
Receiving objects:  39% (818/2097)   
Receiving objects:  40% (839/2097)   
Receiving objects:  41% (860/2097)   
Receiving objects:  42% (881/2097)   
Receiving objects:  43% (902/2097)   
Receiving objects:  44% (923/2097)   
Receiving objects:  45% (944/2097)   
Receiving objects:  46% (965/2097)   
Receiving objects:  47% (986/2097)   
Receiving objects:  48% (1007/2097)   
Receiving objects:  49% (1028/2097)   
Receiving objects:  50% (1049/2097)   
Receiving objects:  51% (1070/2097)   
Receiving objects:  52% (1091/2097)   
Receiving objects:  53% (1112/2097)   
Receiving objects:  54% (1133/2097)   
Receiving objects:  55% (1154/2097)   
Receiving objects:  56% (1175/2097)   
Receiving objects:  57% (1196/2097)   
Receiving objects:  58% (1217/2097)   
Receiving objects:  59% (1238/2097)   
Receiving objects:  60% (1259/2097)   
Receiving objects:  61% (1280/2097)   
Receiving objects:  62% (1301/2097)   
Receiving objects:  63% (1322/2097)   
remote: Total 2097 (delta 889), reused 1589 (delta 588), pack-reused 0[K
Receiving objects:  64% (1343/2097)   
Receiving objects:  65% (1364/2097)   
Receiving objects:  66% (1385/2097)   
Receiving objects:  67% (1405/2097)   
Receiving objects:  68% (1426/2097)   
Receiving objects:  69% (1447/2097)   
Receiving objects:  70% (1468/2097)   
Receiving objects:  71% (1489/2097)   
Receiving objects:  72% (1510/2097)   
Receiving objects:  73% (1531/2097)   
Receiving objects:  74% (1552/2097)   
Receiving objects:  75% (1573/2097)   
Receiving objects:  76% (1594/2097)   
Receiving objects:  77% (1615/2097)   
Receiving objects:  78% (1636/2097)   
Receiving objects:  79% (1657/2097)   
Receiving objects:  80% (1678/2097)   
Receiving objects:  81% (1699/2097)   
Receiving objects:  82% (1720/2097)   
Receiving objects:  83% (1741/2097)   
Receiving objects:  84% (1762/2097)   
Receiving objects:  85% (1783/2097)   
Receiving objects:  86% (1804/2097)   
Receiving objects:  87% (1825/2097)   
Receiving objects:  88% (1846/2097)   
Receiving objects:  89% (1867/2097)   
Receiving objects:  90% (1888/2097)   
Receiving objects:  91% (1909/2097)   
Receiving objects:  92% (1930/2097)   
Receiving objects:  93% (1951/2097)   
Receiving objects:  94% (1972/2097)   
Receiving objects:  95% (1993/2097)   
Receiving objects:  96% (2014/2097)   
Receiving objects:  97% (2035/2097)   
Receiving objects:  98% (2056/2097)   
Receiving objects:  99% (2077/2097)   
Receiving objects: 100% (2097/2097)   
Receiving objects: 100% (2097/2097), 465.71 KiB | 0 bytes/s, done.
Resolving deltas:   0% (0/889)   
Resolving deltas:   9% (87/889)   
Resolving deltas:  10% (89/889)   
Resolving deltas:  11% (100/889)   
Resolving deltas:  13% (124/889)   
Resolving deltas:  14% (125/889)   
Resolving deltas:  15% (135/889)   
Resolving deltas:  16% (143/889)   
Resolving deltas:  27% (247/889)   
Resolving deltas:  28% (249/889)   
Resolving deltas:  29% (259/889)   
Resolving deltas:  30% (273/889)   
Resolving deltas:  31% (279/889)   
Resolving deltas:  32% (288/889)   
Resolving deltas:  33% (295/889)   
Resolving deltas:  34% (308/889)   
Resolving deltas:  35% (313/889)   
Resolving deltas:  36% (322/889)   
Resolving deltas:  37% (329/889)   
Resolving deltas:  41% (371/889)   
Resolving deltas:  42% (379/889)   
Resolving deltas:  43% (383/889)   
Resolving deltas:  44% (395/889)   
Resolving deltas:  45% (401/889)   
Resolving deltas:  46% (409/889)   
Resolving deltas:  47% (419/889)   
Resolving deltas:  48% (429/889)   
Resolving deltas:  50% (445/889)   
Resolving deltas:  51% (454/889)   
Resolving deltas:  52% (465/889)   
Resolving deltas:  53% (473/889)   
Resolving deltas:  54% (485/889)   
Resolving deltas:  55% (490/889)   
Resolving deltas:  57% (511/889)   
Resolving deltas:  58% (520/889)   
Resolving deltas:  59% (525/889)   
Resolving deltas:  60% (535/889)   
Resolving deltas:  61% (544/889)   
Resolving deltas:  68% (610/889)   
Resolving deltas:  69% (615/889)   
Resolving deltas:  70% (627/889)   
Resolving deltas:  71% (633/889)   
Resolving deltas:  72% (641/889)   
Resolving deltas:  73% (649/889)   
Resolving deltas:  75% (675/889)   
Resolving deltas:  76% (681/889)   
Resolving deltas:  77% (685/889)   
Resolving deltas:  78% (694/889)   
Resolving deltas:  79% (703/889)   
Resolving deltas:  80% (714/889)   
Resolving deltas:  81% (721/889)   
Resolving deltas:  82% (733/889)   
Resolving deltas:  83% (740/889)   
Resolving deltas:  84% (747/889)   
Resolving deltas:  85% (760/889)   
Resolving deltas:  92% (821/889)   
Resolving deltas:  94% (838/889)   
Resolving deltas:  95% (846/889)   
Resolving deltas:  96% (855/889)   
Resolving deltas:  97% (867/889)   
Resolving deltas:  98% (872/889)   
Resolving deltas: 100% (889/889)   
Resolving deltas: 100% (889/889), done.
Checking connectivity... done.
travis_time:end:0f85aba1:start=1447266973414135643,finish=1447266974083563586,duration=669427943
[0K$ cd travis-ci/travis-core
travis_time:start:26342f30
[0K$ git fetch origin +refs/pull/484/merge:
remote: Counting objects: 41, done.[K
remote: Compressing objects:   4% (1/21)   [K
remote: Compressing objects:   9% (2/21)   [K
remote: Compressing objects:  14% (3/21)   [K
remote: Compressing objects:  19% (4/21)   [K
remote: Compressing objects:  23% (5/21)   [K
remote: Compressing objects:  28% (6/21)   [K
remote: Compressing objects:  33% (7/21)   [K
remote: Compressing objects:  38% (8/21)   [K
remote: Compressing objects:  42% (9/21)   [K
remote: Compressing objects:  47% (10/21)   [K
remote: Compressing objects:  52% (11/21)   [K
remote: Compressing objects:  57% (12/21)   [K
remote: Compressing objects:  61% (13/21)   [K
remote: Compressing objects:  66% (14/21)   [K
remote: Compressing objects:  71% (15/21)   [K
remote: Compressing objects:  76% (16/21)   [K
remote: Compressing objects:  80% (17/21)   [K
remote: Compressing objects:  85% (18/21)   [K
remote: Compressing objects:  90% (19/21)   [K
remote: Compressing objects:  95% (20/21)   [K
remote: Compressing objects: 100% (21/21)   [K
remote: Compressing objects: 100% (21/21), done.[K
remote: Total 41 (delta 27), reused 33 (delta 20), pack-reused 0[K
Unpacking objects:   2% (1/41)   
Unpacking objects:   4% (2/41)   
Unpacking objects:   7% (3/41)   
Unpacking objects:   9% (4/41)   
Unpacking objects:  12% (5/41)   
Unpacking objects:  14% (6/41)   
Unpacking objects:  17% (7/41)   
Unpacking objects:  19% (8/41)   
Unpacking objects:  21% (9/41)   
Unpacking objects:  24% (10/41)   
Unpacking objects:  26% (11/41)   
Unpacking objects:  29% (12/41)   
Unpacking objects:  31% (13/41)   
Unpacking objects:  34% (14/41)   
Unpacking objects:  36% (15/41)   
Unpacking objects:  39% (16/41)   
Unpacking objects:  41% (17/41)   
Unpacking objects:  43% (18/41)   
Unpacking objects:  46% (19/41)   
Unpacking objects:  48% (20/41)   
Unpacking objects:  51% (21/41)   
Unpacking objects:  53% (22/41)   
Unpacking objects:  56% (23/41)   
Unpacking objects:  58% (24/41)   
Unpacking objects:  60% (25/41)   
Unpacking objects:  63% (26/41)   
Unpacking objects:  65% (27/41)   
Unpacking objects:  68% (28/41)   
Unpacking objects:  70% (29/41)   
Unpacking objects:  73% (30/41)   
Unpacking objects:  75% (31/41)   
Unpacking objects:  78% (32/41)   
Unpacking objects:  80% (33/41)   
Unpacking objects:  82% (34/41)   
Unpacking objects:  85% (35/41)   
Unpacking objects:  87% (36/41)   
Unpacking objects:  90% (37/41)   
Unpacking objects:  92% (38/41)   
Unpacking objects:  95% (39/41)   
Unpacking objects:  97% (40/41)   
Unpacking objects: 100% (41/41)   
Unpacking objects: 100% (41/41), done.
From https://github.com/travis-ci/travis-core
 * branch            refs/pull/484/merge -> FETCH_HEAD
travis_time:end:26342f30:start=1447266974087639633,finish=1447266978898234489,duration=4810594856
[0K$ git checkout -qf FETCH_HEAD
travis_fold:end:git.checkout
[0Ktravis_fold:start:services
[0Ktravis_time:start:1710b4f0
[0K$ sudo service redis-server start
redis-server start/running, process 1790
travis_time:end:1710b4f0:start=1447266978943758065,finish=1447266978978313687,duration=34555622
[0Ktravis_fold:end:services
[0Ktravis_fold:start:postgresql
[0K[33;1mStarting PostgreSQL v9.3[0m
travis_time:start:21d44b90
[0K$ sudo service postgresql stop
 * Stopping PostgreSQL 9.1 database server       [80G 
[74G[ OK ]
 * Stopping PostgreSQL 9.2 database server       [80G 
[74G[ OK ]
 * Stopping PostgreSQL 9.3 database server       [80G 
[74G[ OK ]
 * Stopping PostgreSQL 9.4 database server       [80G 
[74G[ OK ]
travis_time:end:21d44b90:start=1447266981985094426,finish=1447266983441017766,duration=1455923340
[0Ktravis_time:start:238ffde0
[0K$ sudo service postgresql start 9.3
 * Starting PostgreSQL 9.3 database server       [80G 
[74G[ OK ]
travis_time:end:238ffde0:start=1447266983446037179,finish=1447266985738023224,duration=2291986045
[0Ktravis_time:start:2801a18c
[0K$ sudo -u postgres createuser -s -p 5432 travis &>/dev/null
travis_time:end:2801a18c:start=1447266985743131797,finish=1447266985818257843,duration=75126046
[0Ktravis_time:start:02404f6e
[0K$ sudo -u postgres createdb -O travis -p 5432 travis &>/dev/null
travis_time:end:02404f6e:start=1447266985823189402,finish=1447266986111259943,duration=288070541
[0Ktravis_time:start:0c63cbfc
[0K$ sudo -u postgres createuser -s -p 5433 travis &>/dev/null
travis_time:end:0c63cbfc:start=1447266986116145740,finish=1447266986183486819,duration=67341079
[0Ktravis_time:start:0216888f
[0K$ sudo -u postgres createdb -O travis -p 5433 travis &>/dev/null
travis_time:end:0216888f:start=1447266986188309234,finish=1447266986236901880,duration=48592646
[0Ktravis_fold:end:postgresql
[0K
[33;1mThis job is running on container-based infrastructure, which does not allow use of 'sudo', setuid and setguid executables.[0m
[33;1mIf you require sudo, add 'sudo: required' to your .travis.yml[0m
[33;1mSee http://docs.travis-ci.com/user/workers/container-based-infrastructure/ for details.[0m

[33;1mSetting environment variables from repository settings[0m
$ export ARTIFACTS_KEY=[secure]
$ export ARTIFACTS_SECRET=[secure]
$ export ARTIFACTS_BUCKET=travis-core-artifacts
$ export ARTIFACTS_PERMISSIONS=public-read
$ export ARTIFACTS_PATHS=coverage/:log/
$ export CASHER_LOG_LEVEL=debug

[33;1mSetting environment variables from .travis.yml[0m
$ export JRUBY_OPTS="--dev -Xcext.enabled=false -Xcompile.invokedynamic=false -J-Xmx1g"

travis_fold:start:cache.1
[0KSetting up build cache
$ export CASHER_DIR=$HOME/.casher
travis_time:start:02334f08
[0K$ Installing caching utilities
travis_time:end:02334f08:start=1447266989808436940,finish=1447266989886351510,duration=77914570
[0Ktravis_time:start:01824828
[0Kattempting to download cache archive
fetching PR.484/cache--jdk-oraclejdk7--rvm-jruby-1.7.16--gemfile-Gemfile.tgz
found cache
travis_time:end:01824828:start=1447266989892717215,finish=1447266992045933589,duration=2153216374
[0Ktravis_time:start:1bf5eb00
[0Kadding /home/travis/build/travis-ci/travis-core/vendor/bundle to cache
travis_time:end:1bf5eb00:start=1447266992051023005,finish=1447266995563216341,duration=3512193336
[0Ktravis_fold:end:cache.1
[0K$ jdk_switcher use oraclejdk7
Switching to Oracle JDK7 (java-7-oracle), JAVA_HOME will be set to /usr/lib/jvm/java-7-oracle
travis_fold:start:rvm
[0Ktravis_time:start:03d578f0
[0K$ rvm use jruby-1.7.16 --install --binary --fuzzy
[31mUnknown ruby string (do not know how to handle): jruby-1.7.16.[0m
[31mUnknown ruby string (do not know how to handle): jruby-1.7.16.[0m
[33mjruby-1.7.16 is not installed - installing.[0m
[31mUnknown ruby string (do not know how to handle): jruby-1.7.16.[0m
[31mUnknown ruby string (do not know how to handle): jruby-1.7.16.[0m
[32mSearching for binary rubies, this might take some time.[0m
[31mUnknown ruby string (do not know how to handle): jruby-1.7.16.[0m
[31mUnknown ruby string (do not know how to handle): jruby-1.7.16.[0m
[32mFound remote file https://s3.amazonaws.com/jruby.org/downloads/1.7.16/jruby-bin-1.7.16.tar.gz[0m
[32mChecking requirements for ubuntu.[0m
[32mRequirements installation successful.[0m
[32mjruby-1.7.16 - #configure[0m
[31mUnknown ruby string (do not know how to handle): jruby-1.7.16.[0m
[32mjruby-1.7.16 - #download[0m
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
 81 30.8M   81 25.2M    0     0  43.7M      0 --:--:-- --:--:-- --:--:-- 43.8M
100 30.8M  100 30.8M    0     0  45.5M      0 --:--:-- --:--:-- --:--:-- 45.5M
[32mjruby-1.7.16 - #validate archive[0m
[32mjruby-1.7.16 - #extract[0m
[32mjruby-1.7.16 - #validate binary[0m
[32mjruby-1.7.16 - #setup[0m
[32mjruby-1.7.16 - #gemset created /home/travis/.rvm/gems/jruby-1.7.16@global[0m
[32mjruby-1.7.16 - #importing gemset /home/travis/.rvm/gemsets/jruby/global.gems[0m|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|..
[32mjruby-1.7.16 - #generating global wrappers[0m|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/.
[32mjruby-1.7.16 - #uninstalling gem rubygems-bundler-1.4.4[0m|/.
[32mjruby-1.7.16 - #gemset created /home/travis/.rvm/gems/jruby-1.7.16[0m
[32mjruby-1.7.16 - #importing gemset /home/travis/.rvm/gemsets/default.gems[0m|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.
[32mjruby-1.7.16 - #generating default wrappers[0m|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-\|/-.|/-\|/-\|.-\|/-.
chown: changing ownership of `/home/travis/.rvm/user/installs': Operation not permitted
[32mUsing /home/travis/.rvm/gems/jruby-1.7.16[0m
travis_time:end:03d578f0:start=1447266995574202218,finish=1447267139230184025,duration=143655981807
[0Ktravis_fold:end:rvm
[0K$ export BUNDLE_GEMFILE=$PWD/Gemfile
$ java -Xmx32m -version
java version "1.7.0_76"
Java(TM) SE Runtime Environment (build 1.7.0_76-b13)
Java HotSpot(TM) 64-Bit Server VM (build 24.76-b04, mixed mode)
$ javac -J-Xmx32m -version
javac 1.7.0_76
$ ruby --version
jruby 1.7.16 (1.9.3p392) 2014-09-25 575b395 on Java HotSpot(TM) 64-Bit Server VM 1.7.0_76-b13 [linux-amd64]
$ rvm --version
rvm 1.26.10 (latest-minor) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]
$ bundle --version
Bundler version 1.10.6
$ gem --version
2.1.9
travis_fold:start:before_install.1
[0Ktravis_time:start:02dcc3f8
[0K$ if [ $TRAVIS_RUBY_VERSION = 'jruby-9.0.0.0' ]; then rvm get head; rvm use --install jruby-9.0.0.0; ruby --version; fi
travis_time:end:02dcc3f8:start=1447267146459184178,finish=1447267146463493228,duration=4309050
[0Ktravis_fold:end:before_install.1
[0Ktravis_fold:start:before_install.2
[0Ktravis_time:start:09dc8062
[0K$ gem install bundler -v 1.9.0
Fetching: bundler-1.9.0.gem
Fetching: bundler-1.9.0.gem (  7%)
Fetching: bundler-1.9.0.gem ( 14%)
Fetching: bundler-1.9.0.gem ( 20%)
Fetching: bundler-1.9.0.gem ( 27%)
Fetching: bundler-1.9.0.gem ( 34%)
Fetching: bundler-1.9.0.gem ( 41%)
Fetching: bundler-1.9.0.gem ( 47%)
Fetching: bundler-1.9.0.gem ( 54%)
Fetching: bundler-1.9.0.gem ( 61%)
Fetching: bundler-1.9.0.gem ( 68%)
Fetching: bundler-1.9.0.gem ( 74%)
Fetching: bundler-1.9.0.gem ( 81%)
Fetching: bundler-1.9.0.gem ( 88%)
Fetching: bundler-1.9.0.gem ( 94%)
Fetching: bundler-1.9.0.gem (100%)
Fetching: bundler-1.9.0.gem (100%)
Successfully installed bundler-1.9.0
1 gem installed
travis_time:end:09dc8062:start=1447267146469289768,finish=1447267163302079675,duration=16832789907
[0Ktravis_fold:end:before_install.2
[0Ktravis_fold:start:install
[0Ktravis_time:start:234d8d20
[0K$ bundle _1.9.0_ install --jobs=3 --retry=3 --path=${BUNDLE_PATH:-vendor/bundle}
[32mUpdating git://github.com/travis-ci/travis-support.git[0m
[32mUpdating git://github.com/travis-ci/travis-sidekiqs.git[0m
[32mUpdating git://github.com/travis-ci/gh.git[0m
Fetching gem metadata from https://rubygems.org/........
Fetching version metadata from https://rubygems.org/...
Fetching dependency metadata from https://rubygems.org/..
Resolving dependencies........................................................................
Using rake 10.4.2
Using i18n 0.7.0
Using multi_json 1.11.2
Using builder 3.0.4
Using journey 1.0.4
Using rack 1.4.7
Using erubis 2.7.0
Using hike 1.2.3
Using tilt 1.4.1
Using mime-types 1.25.1
Using polyglot 0.3.5
Using arel 3.0.3
Using tzinfo 0.3.45
Using jdbc-postgres 9.4.1204
Using addressable 2.3.8
Using json 1.8.3
Using nokogiri 1.6.6.2
Using thread_safe 0.3.5
Using ice_nine 0.11.1
Using backports 3.6.7
Using bouncy-castle-java 1.5.0147
Using hitimes 1.2.3
Using coder 0.4.0
Using coderay 1.1.0
Using connection_pool 2.2.0
Using safe_yaml 1.0.4
Using dalli 2.7.4
Using database_cleaner 0.8.0
Using diff-lcs 1.1.3
Using docile 1.1.5
Using equalizer 0.0.11
Using multipart-post 2.0.0
Using ffi 1.9.10
Using formatador 0.2.5
Using net-http-persistent 2.9.4
Using net-http-pipeline 1.0.1
Using rb-fsevent 0.9.6
Using lumberjack 1.0.9
Using method_source 0.8.2
Using slop 3.6.0
Using thor 0.14.6
Using hashr 0.0.22
Using httpclient 2.7.0.1
Using march_hare 2.0.0
Using metaclass 0.0.4
Using proxies 0.2.1
Using pusher-signature 0.1.8
Using redis 3.2.1
Using rollout 1.1.0
Using atomic 1.1.99
Using rspec-core 2.8.0
Using rspec-mocks 2.8.0
Using simplecov-html 0.10.0
Using bundler 1.9.0
Using activesupport 3.2.22
Using rack-cache 1.5.1
Using rack-test 0.6.3
Using rack-ssl 1.3.4
Using sprockets 2.2.3
Using treetop 1.4.15
Using keen 0.8.10
Using rdoc 3.12.2
Using aws-sdk-v1 1.66.0
Using descendants_tracker 0.0.4
Using jruby-openssl 0.8.10
Using timers 4.1.1
Using crack 0.4.2
Using rspec-expectations 2.8.0
Using faraday 0.9.2
Using rb-inotify 0.9.5
Using rb-kqueue 0.2.4
Using spoon 0.0.4
Using travis-config 0.1.4
Using mocha 0.10.5
Using s3 0.3.23
Using pusher 0.14.6
Using redis-namespace 1.5.2
Using avl_tree 1.2.1
Using simplecov 0.10.0
Using activemodel 3.2.22
Using factory_girl 2.6.4
Using simple_states 1.0.1
Using mail 2.5.4
Using axiom-types 0.1.1
Using coercible 1.0.0
Using celluloid-essentials 0.20.5
Using celluloid-extras 0.20.5
Using celluloid-fsm 0.20.5
Using celluloid-pool 0.20.5
Using celluloid-supervision 0.20.5
Using webmock 1.8.11
Using rspec 2.8.0
Using gh 0.14.0 from git://github.com/travis-ci/gh.git (at master)
Using listen 1.3.1
Using pry 0.10.3
Using metriks 0.9.9.7
Using actionpack 3.2.22
Using activerecord 3.2.22
Using virtus 1.0.5
Using celluloid 0.17.2
Using guard 1.8.3
Using actionmailer 3.2.22
Using railties 3.2.22
Using activerecord-jdbc-adapter 1.3.19
Using data_migrations 0.0.1
Using sidekiq 3.5.3
Using guard-rspec 1.2.2
Using micro_migrations 0.0.2
Using activerecord-jdbcpostgresql-adapter 1.3.19
Using travis-support 0.0.1 from git://github.com/travis-ci/travis-support.git (at master)
Using travis-sidekiqs 0.0.1 from git://github.com/travis-ci/travis-sidekiqs.git (at master)
Using travis-core 0.0.1 from source at .
[32mBundle complete! 26 Gemfile dependencies, 112 gems now installed.[0m
[32mBundled gems are installed into ./vendor/bundle.[0m
travis_time:end:234d8d20:start=1447267163307824149,finish=1447267252588230958,duration=89280406809
[0Ktravis_fold:end:install
[0Ktravis_fold:start:before_script.1
[0Ktravis_time:start:270824ac
[0K$ redis-cli config set save ""
OK
travis_time:end:270824ac:start=1447267252593602975,finish=1447267252602389738,duration=8786763
[0Ktravis_fold:end:before_script.1
[0Ktravis_fold:start:before_script.2
[0Ktravis_time:start:04aa0144
[0K$ RAILS_ENV=test bundle exec rake db:create db:migrate --trace
I TID=13182 Setting up Travis::Core
** Invoke db:create (first_time)
** Invoke db:load_config (first_time)
** Execute db:load_config
** Invoke rails_env (first_time)
** Execute rails_env
** Execute db:create
** Invoke db:migrate (first_time)
** Invoke environment (first_time)
** Execute environment
** Invoke db:load_config 
** Execute db:migrate
==  CreateRepositories: migrating =============================================
-- create_table(:repositories)
   -> 0.0090s
   -> 0 rows
==  CreateRepositories: migrated (0.0090s) ====================================

==  CreateBuilds: migrating ===================================================
-- create_table(:builds)
   -> 0.0070s
   -> 0 rows
==  CreateBuilds: migrated (0.0080s) ==========================================

==  DeviseCreateUsers: migrating ==============================================
-- create_table(:users)
   -> 0.0060s
   -> 0 rows
-- add_index(:users, :login, {:unique=>true})
   -> 0.0030s
   -> 0 rows
==  DeviseCreateUsers: migrated (0.0110s) =====================================

==  RepositoriesAddUsername: migrating ========================================
-- change_table(:repositories)
   -> 0.0020s
==  RepositoriesAddUsername: migrated (0.0030s) ===============================

==  CreateTokens: migrating ===================================================
-- create_table(:tokens)
   -> 0.0030s
   -> 0 rows
==  CreateTokens: migrated (0.0050s) ==========================================

==  AddBuildParentIdAndConfiguration: migrating ===============================
-- change_table(:builds)
   -> 0.0030s
-- change_column(:builds, :number, :string)
   -> 0.0040s
-- add_index(:builds, :repository_id)
   -> 0.0020s
   -> 0 rows
-- add_index(:builds, :parent_id)
   -> 0.0040s
   -> 0 rows
==  AddBuildParentIdAndConfiguration: migrated (0.0160s) ======================

==  RepositoriesDenormalizeLastBuildAttributes: migrating =====================
-- change_table(:repositories)
   -> 0.0040s
==  RepositoriesDenormalizeLastBuildAttributes: migrated (0.0110s) ============

==  RepositoriesAddOwnerNameAndOwnerEmail: migrating ==========================
-- change_table(:repositories)
   -> 0.0020s
-- remove_column(:repositories, :username)
   -> 0.0010s
==  RepositoriesAddOwnerNameAndOwnerEmail: migrated (0.0050s) =================

==  RepositoryStripOwnerNameFromName: migrating ===============================
==  RepositoryStripOwnerNameFromName: migrated (0.0010s) ======================

==  CreateHistoriesTable: migrating ===========================================
-- create_table(:histories)
   -> 0.0040s
   -> 0 rows
-- add_index(:histories, [:item, :table, :month, :year])
   -> 0.0040s
   -> 0 rows
==  CreateHistoriesTable: migrated (0.0080s) ==================================

==  RenameHistoriesToRailsAdminHistories: migrating ===========================
-- rename_table(:histories, :rails_admin_histories)
   -> 0.0040s
==  RenameHistoriesToRailsAdminHistories: migrated (0.0040s) ==================

==  AddAdminFlagToUser: migrating =============================================
-- change_table(:users)
   -> 0.0090s
==  AddAdminFlagToUser: migrated (0.0170s) ====================================

==  BuildsAddRef: migrating ===================================================
-- change_table(:builds)
   -> 0.0010s
==  BuildsAddRef: migrated (0.0030s) ==========================================

==  BuildsAddGithubPayload: migrating =========================================
-- change_table(:builds)
   -> 0.0010s
==  BuildsAddGithubPayload: migrated (0.0030s) ================================

==  AddGithubIdToUsersTable: migrating ========================================
-- add_column(:users, :github_id, :integer)
   -> 0.0010s
-- add_index(:users, :github_id)
   -> 0.0030s
   -> 0 rows
==  AddGithubIdToUsersTable: migrated (0.0060s) ===============================

==  RepositoriesChangeOwnerEmailType: migrating ===============================
-- change_column(:repositories, :owner_email, :text)
   -> 0.0010s
==  RepositoriesChangeOwnerEmailType: migrated (0.0010s) ======================

==  AddGithubOauthTokenToUser: migrating ======================================
-- add_column(:users, :github_oauth_token, :string)
   -> 0.0020s
-- add_index(:users, :github_oauth_token)
   -> 0.0030s
   -> 0 rows
==  AddGithubOauthTokenToUser: migrated (0.0060s) =============================

==  AddCompareUrlToBuild: migrating ===========================================
-- add_column(:builds, :compare_url, :string)
   -> 0.0010s
==  AddCompareUrlToBuild: migrated (0.0020s) ==================================

==  BuildsRemoveJobId: migrating ==============================================
-- change_table(:builds)
   -> 0.0020s
==  BuildsRemoveJobId: migrated (0.0020s) =====================================

==  BuildRemoveLastBuiltAt: migrating =========================================
-- change_table(:repositories)
   -> 0.0020s
==  BuildRemoveLastBuiltAt: migrated (0.0020s) ================================

==  AddMissingIndexes: migrating ==============================================
-- add_index(:repositories, :last_build_started_at)
   -> 0.0020s
   -> 0 rows
-- add_index(:repositories, [:owner_name, :name])
   -> 0.0020s
   -> 0 rows
-- add_index(:builds, [:repository_id, :parent_id, :started_at])
   -> 0.0030s
   -> 0 rows
==  AddMissingIndexes: migrated (0.0110s) =====================================

==  AddActiveToRepositories: migrating ========================================
-- add_column(:repositories, :is_active, :boolean)
   -> 0.0010s
==  AddActiveToRepositories: migrated (0.0020s) ===============================

==  StoreTokenInBuild: migrating ==============================================
-- add_column(:builds, :token, :string)
   -> 0.0020s
==  StoreTokenInBuild: migrated (0.0020s) =====================================

==  CreateRequestsCommitsAndTasks: migrating ==================================
-- change_table(:builds)
   -> 0.0020s
-- create_table(:commits, {:force=>true})
   -> 0.0050s
   -> 0 rows
-- create_table(:requests, {:force=>true})
   -> 0.0070s
   -> 0 rows
-- create_table(:tasks, {:force=>true})
   -> 0.0080s
   -> 0 rows
Executing: UPDATE "commits" SET "id" = source."id", "repository_id" = source."repository_id", "created_at" = source."created_at", "updated_at" = source."updated_at", "commit" = source."commit", "ref" = source."ref", "branch" = source."branch", "message" = source."message", "compare_url" = source."compare_url", "committed_at" = source."committed_at", "committer_name" = source."committer_name", "committer_email" = source."committer_email", "author_name" = source."author_name", "author_email" = source."author_email" FROM (SELECT "id", "repository_id", "created_at", "updated_at", "commit", "ref", "branch", "message", "compare_url", "committed_at", "committer_name", "committer_email", "author_name", "author_email" FROM "builds" WHERE "builds".id IN (SELECT id FROM "commits")) AS source WHERE "commits".id = source.id
Executing: INSERT INTO "commits" ("id", "repository_id", "created_at", "updated_at", "commit", "ref", "branch", "message", "compare_url", "committed_at", "committer_name", "committer_email", "author_name", "author_email") SELECT "id", "repository_id", "created_at", "updated_at", "commit", "ref", "branch", "message", "compare_url", "committed_at", "committer_name", "committer_email", "author_name", "author_email" FROM "builds" WHERE "builds".id NOT IN (SELECT id FROM "commits")
Executing: ALTER TABLE "builds" DROP COLUMN "ref"
Executing: ALTER TABLE "builds" DROP COLUMN "branch"
Executing: ALTER TABLE "builds" DROP COLUMN "message"
Executing: ALTER TABLE "builds" DROP COLUMN "compare_url"
Executing: ALTER TABLE "builds" DROP COLUMN "committed_at"
Executing: ALTER TABLE "builds" DROP COLUMN "committer_name"
Executing: ALTER TABLE "builds" DROP COLUMN "committer_email"
Executing: ALTER TABLE "builds" DROP COLUMN "author_name"
Executing: ALTER TABLE "builds" DROP COLUMN "author_email"
Executing: UPDATE "requests" SET "id" = source."id", "repository_id" = source."repository_id", "config" = source."config", "created_at" = source."created_at", "updated_at" = source."updated_at", "commit" = source."commit", "started_at" = source."started_at", "finished_at" = source."finished_at" FROM (SELECT "id", "repository_id", "config", "created_at", "updated_at", "commit", "started_at", "finished_at" FROM "builds" WHERE "builds".id IN (SELECT id FROM "requests")) AS source WHERE "requests".id = source.id
Executing: INSERT INTO "requests" ("id", "repository_id", "config", "created_at", "updated_at", "commit", "started_at", "finished_at") SELECT "id", "repository_id", "config", "created_at", "updated_at", "commit", "started_at", "finished_at" FROM "builds" WHERE "builds".id NOT IN (SELECT id FROM "requests")
Executing: UPDATE "requests" SET "id" = source."id", "payload" = source."github_payload", "token" = source."token" FROM (SELECT "id", "github_payload", "token" FROM "builds" WHERE "builds".id IN (SELECT id FROM "requests")) AS source WHERE "requests".id = source.id
Executing: INSERT INTO "requests" ("id", "payload", "token") SELECT "id", "github_payload" AS "payload", "token" AS "token" FROM "builds" WHERE "builds".id NOT IN (SELECT id FROM "requests")
Executing: ALTER TABLE "builds" DROP COLUMN "github_payload"
Executing: ALTER TABLE "builds" DROP COLUMN "token"
Executing: UPDATE "requests" SET "state" = 'finished'
Executing: UPDATE "requests" SET "source" = 'github'
Executing: UPDATE "tasks" SET "id" = source."id", "number" = source."number", "status" = source."status", "started_at" = source."started_at", "finished_at" = source."finished_at", "commit" = source."commit", "config" = source."config", "log" = source."log" FROM (SELECT "id", "number", "status", "started_at", "finished_at", "commit", "config", "log" FROM "builds" WHERE "builds".id IN (SELECT id FROM "tasks") AND parent_id IS NOT NULL OR parent_id IS NULL AND (SELECT COUNT(*) FROM builds AS children WHERE children.id = builds.id) = 0) AS source WHERE "tasks".id = source.id
Executing: INSERT INTO "tasks" ("id", "number", "status", "started_at", "finished_at", "commit", "config", "log") SELECT "id", "number", "status", "started_at", "finished_at", "commit", "config", "log" FROM "builds" WHERE "builds".id NOT IN (SELECT id FROM "tasks") AND parent_id IS NOT NULL OR parent_id IS NULL AND (SELECT COUNT(*) FROM builds AS children WHERE children.id = builds.id) = 0
Executing: ALTER TABLE "builds" DROP COLUMN "log"
Executing: UPDATE "tasks" SET "id" = source."id", "owner_id" = source."parent_id" FROM (SELECT "id", "parent_id" FROM "builds" WHERE "builds".id IN (SELECT id FROM "tasks") AND parent_id IS NOT NULL OR parent_id IS NULL AND (SELECT COUNT(*) FROM builds AS children WHERE children.id = builds.id) = 0) AS source WHERE "tasks".id = source.id
Executing: INSERT INTO "tasks" ("id", "owner_id") SELECT "id", "parent_id" AS "owner_id" FROM "builds" WHERE "builds".id NOT IN (SELECT id FROM "tasks") AND parent_id IS NOT NULL OR parent_id IS NULL AND (SELECT COUNT(*) FROM builds AS children WHERE children.id = builds.id) = 0
Executing: UPDATE "tasks" SET "owner_type" = 'Build'
Executing: UPDATE "tasks" SET "type" = 'Task::Test'
Executing: UPDATE "tasks" SET "state" = 'finished'
-- add_index(:commits, :commit)
   -> 0.0050s
   -> 0 rows
-- add_index(:builds, :commit)
   -> 0.0050s
   -> 0 rows
-- add_index(:requests, :commit)
   -> 0.0030s
   -> 0 rows
-- add_index(:tasks, :commit)
   -> 0.0030s
   -> 0 rows
-- execute("UPDATE requests SET commit_id = (SELECT commits.id FROM commits WHERE commits.commit = requests.commit LIMIT 1)")
   -> 0.0010s
   -> 0 rows
-- execute("UPDATE tasks SET commit_id = (SELECT commits.id FROM commits WHERE commits.commit = tasks.commit LIMIT 1)")
   -> 0.0000s
   -> 0 rows
-- execute("DELETE FROM builds WHERE parent_id IS NOT NULL")
   -> 0.0000s
   -> 0 rows
-- execute("UPDATE builds SET request_id = (SELECT requests.id FROM requests WHERE requests.commit = builds.commit LIMIT 1)")
   -> 0.0010s
   -> 0 rows
-- execute("UPDATE builds SET commit_id = (SELECT commits.id FROM commits WHERE commits.commit = builds.commit LIMIT 1)")
   -> 0.0010s
   -> 0 rows
-- execute("CREATE SEQUENCE shared_builds_tasks_seq START WITH 1 CACHE 30")
   -> 0.0020s
   -> 0 rows
-- execute("ALTER TABLE builds ALTER COLUMN id TYPE BIGINT")
   -> 0.0040s
   -> 0 rows
-- execute("ALTER TABLE builds ALTER COLUMN id SET DEFAULT nextval('shared_builds_tasks_seq')")
   -> 0.0010s
   -> 0 rows
-- execute("ALTER TABLE tasks  ALTER COLUMN id TYPE BIGINT")
   -> 0.0020s
   -> 0 rows
-- execute("ALTER TABLE tasks  ALTER COLUMN id SET DEFAULT nextval('shared_builds_tasks_seq')")
   -> 0.0000s
   -> 0 rows
-- select_value("SELECT max(id) FROM commits")
   -> 0.0010s
-- execute("SELECT setval('commits_id_seq', 1)")
   -> 0.0010s
-- select_value("SELECT max(id) FROM requests")
   -> 0.0010s
-- execute("SELECT setval('requests_id_seq', 1)")
   -> 0.0010s
-- select_value("SELECT max(id) FROM tasks")
   -> 0.0010s
-- execute("SELECT setval('tasks_id_seq', 1)")
   -> 0.0010s
-- remove_column(:builds, :parent_id)
   -> 0.0010s
-- remove_column(:builds, :commit)
   -> 0.0010s
-- remove_column(:requests, :commit)
   -> 0.0010s
-- remove_column(:tasks, :commit)
   -> 0.0010s
==  CreateRequestsCommitsAndTasks: migrated (0.1490s) =========================

==  RepositoryRenameIsActiveToActive: migrating ===============================
-- rename_column(:repositories, :is_active, :active)
   -> 0.0010s
==  RepositoryRenameIsActiveToActive: migrated (0.0020s) ======================

==  TasksAddTags: migrating ===================================================
-- add_column(:tasks, :tags, :text)
   -> 0.0010s
==  TasksAddTags: migrated (0.0010s) ==========================================

==  CacheOneNumberForSharedBuildsTasksSequence: migrating =====================
-- execute("ALTER SEQUENCE shared_builds_tasks_seq CACHE 1 NO MAXVALUE NO CYCLE")
   -> 0.0010s
   -> 0 rows
==  CacheOneNumberForSharedBuildsTasksSequence: migrated (0.0010s) ============

==  RenameTasksToJobs: migrating ==============================================
-- rename_table(:tasks, :jobs)
   -> 0.0050s
-- execute("UPDATE jobs SET type = 'Job::Test' WHERE type = 'Task::Test'")
   -> 0.0000s
   -> 0 rows
-- execute("UPDATE jobs SET type = 'Job::Configure' WHERE type = 'Task::Configure'")
   -> 0.0000s
   -> 0 rows
==  RenameTasksToJobs: migrated (0.0070s) =====================================

==  CreateArtifacts: migrating ================================================
-- create_table(:artifacts)
   -> 0.0040s
   -> 0 rows
Executing: UPDATE "artifacts" SET "id" = source."id", "content" = source."log" FROM (SELECT "id", "log" FROM "jobs" WHERE "jobs".id IN (SELECT id FROM "artifacts")) AS source WHERE "artifacts".id = source.id
Executing: INSERT INTO "artifacts" ("id", "content") SELECT "id", "log" AS "content" FROM "jobs" WHERE "jobs".id NOT IN (SELECT id FROM "artifacts")
Executing: ALTER TABLE "jobs" DROP COLUMN "log"
Executing: UPDATE "artifacts" SET "type" = 'Artifact::Log'
-- execute("UPDATE artifacts SET job_id = id")
   -> 0.0010s
   -> 0 rows
-- execute("select setval('artifacts_id_seq', (select max(id) + 1 from artifacts));")
   -> 0.0010s
-- add_index(:artifacts, [:type, :job_id])
   -> 0.0020s
   -> 0 rows
==  CreateArtifacts: migrated (0.0140s) =======================================

==  CreateWorkers: migrating ==================================================
-- create_table(:workers)
   -> 0.0030s
   -> 0 rows
-- add_index(:workers, [:name, :host])
   -> 0.0020s
   -> 0 rows
==  CreateWorkers: migrated (0.0060s) =========================================

==  JobsAddRetries: migrating =================================================
-- change_table(:jobs)
   -> 0.0060s
==  JobsAddRetries: migrated (0.0060s) ========================================

==  RemoveRailsAdmin: migrating ===============================================
-- drop_table(:rails_admin_histories)
   -> 0.0010s
   -> 0 rows
==  RemoveRailsAdmin: migrated (0.0030s) ======================================

==  AddIndexesToJobs: migrating ===============================================
-- add_index(:jobs, [:queue, :state])
   -> 0.0020s
   -> 0 rows
==  AddIndexesToJobs: migrated (0.0030s) ======================================

==  AddRepositoryIdIndexToJobs: migrating =====================================
-- add_index(:jobs, :repository_id)
   -> 0.0030s
   -> 0 rows
==  AddRepositoryIdIndexToJobs: migrated (0.0040s) ============================

==  AddOwnerAndTypeIndexToJobs: migrating =====================================
-- add_index(:jobs, [:type, :owner_id, :owner_type])
   -> 0.0030s
   -> 0 rows
==  AddOwnerAndTypeIndexToJobs: migrated (0.0040s) ============================

==  WorkersAddPayloadAndLastError: migrating ==================================
-- change_table(:workers)
   -> 0.0010s
==  WorkersAddPayloadAndLastError: migrated (0.0010s) =========================

==  RepositoriesAddDescriptionAndLastLanguage: migrating ======================
-- change_table(:repositories)
   -> 0.0010s
-- change_table(:builds)
   -> 0.0000s
==  RepositoriesAddDescriptionAndLastLanguage: migrated (0.0030s) =============

==  BuildsAddArchivedAt: migrating ============================================
-- change_table(:builds)
   -> 0.0010s
==  BuildsAddArchivedAt: migrated (0.0010s) ===================================

==  MimicProductionDb: migrating ==============================================
-- column_exists?(:users, :oauth2_uid, :integer)
   -> 0.0020s
-- column_exists?(:users, :oauth2_token, :string)
   -> 0.0010s
-- column_exists?(:repositories, :user_id, :integer)
   -> 0.0020s
==  MimicProductionDb: migrated (0.0070s) =====================================

==  BuildsAddDuration: migrating ==============================================
-- change_table(:builds)
   -> 0.0010s
==  BuildsAddDuration: migrated (0.0020s) =====================================

==  RepositoriesAddLastBuildDuration: migrating ===============================
-- change_table(:repositories)
   -> 0.0010s
==  RepositoriesAddLastBuildDuration: migrated (0.0010s) ======================

==  CreateSslKeys: migrating ==================================================
-- create_table(:ssl_keys)
   -> 0.0030s
   -> 0 rows
-- add_index("ssl_keys", ["repository_id"], {:name=>"index_ssl_key_on_repository_id"})
   -> 0.0020s
   -> 0 rows
==  CreateSslKeys: migrated (0.0070s) =========================================

==  AddAllowFailureToJobs: migrating ==========================================
-- add_column(:jobs, :allow_failure, :boolean, {:default=>false})
   -> 0.0030s
==  AddAllowFailureToJobs: migrated (0.0040s) =================================

==  AddPullRequestFieldsToRequest: migrating ==================================
-- add_column(:requests, :event_type, :string)
   -> 0.0010s
-- add_column(:requests, :comments_url, :string)
   -> 0.0010s
-- add_column(:requests, :base_commit, :string)
   -> 0.0010s
-- add_column(:requests, :head_commit, :string)
   -> 0.0000s
==  AddPullRequestFieldsToRequest: migrated (0.0040s) =========================

==  AddGravatarIdToUsers: migrating ===========================================
-- add_column(:users, :gravatar_id, :string)
   -> 0.0010s
==  AddGravatarIdToUsers: migrated (0.0010s) ==================================

==  OrganizationsCreate: migrating ============================================
-- create_table(:organizations)
   -> 0.0030s
   -> 0 rows
==  OrganizationsCreate: migrated (0.0040s) ===================================

==  JobsRenameOwnerToSource: migrating ========================================
-- change_table(:jobs)
   -> 0.0020s
==  JobsRenameOwnerToSource: migrated (0.0020s) ===============================

==  RepositoriesAddOwner: migrating ===========================================
-- change_table(:repositories)
   -> 0.0010s
==  RepositoriesAddOwner: migrated (0.0020s) ==================================

==  BuildsAddOwner: migrating =================================================
-- change_table(:builds)
   -> 0.0010s
==  BuildsAddOwner: migrated (0.0020s) ========================================

==  JobsAddOwner: migrating ===================================================
-- change_table(:jobs)
   -> 0.0010s
==  JobsAddOwner: migrated (0.0020s) ==========================================

==  RequestsAddOwner: migrating ===============================================
-- change_table(:requests)
   -> 0.0020s
==  RequestsAddOwner: migrated (0.0020s) ======================================

==  AddLocaleToUser: migrating ================================================
-- add_column(:users, :locale, :string)
   -> 0.0010s
==  AddLocaleToUser: migrated (0.0010s) =======================================

==  CreateMemberships: migrating ==============================================
-- create_table(:memberships)
   -> 0.0030s
   -> 0 rows
==  CreateMemberships: migrated (0.0030s) =====================================

==  RepositoriesAddPrivate: migrating =========================================
-- change_table(:repositories)
   -> 0.0040s
==  RepositoriesAddPrivate: migrated (0.0040s) ================================

==  CreateUrls: migrating =====================================================
-- create_table(:urls)
   -> 0.0030s
   -> 0 rows
==  CreateUrls: migrated (0.0030s) ============================================

==  CopyStatusToResult: migrating =============================================
-- add_column(:builds, :result, :integer)
   -> 0.0020s
-- add_column(:jobs, :result, :integer)
   -> 0.0020s
-- add_column(:repositories, :last_build_result, :integer)
   -> 0.0020s
Executing: UPDATE builds SET result = status;
Executing: UPDATE jobs SET result = status;
Executing: UPDATE repositories SET last_build_result = last_build_status;
==  CopyStatusToResult: migrated (0.0080s) ====================================

==  RequestsAddIndexOnHeadCommit: migrating ===================================
-- add_index(:requests, :head_commit)
   -> 0.0040s
   -> 0 rows
==  RequestsAddIndexOnHeadCommit: migrated (0.0040s) ==========================

==  CreatePermissions: migrating ==============================================
-- create_table(:permissions)
   -> 0.0050s
   -> 0 rows
-- add_index(:permissions, :user_id)
   -> 0.0040s
   -> 0 rows
-- add_index(:permissions, :repository_id)
   -> 0.0040s
   -> 0 rows
==  CreatePermissions: migrated (0.0130s) =====================================

==  BuildsAddPreviousResult: migrating ========================================
-- change_table(:builds)
   -> 0.0020s
==  BuildsAddPreviousResult: migrated (0.0020s) ===============================

==  AddSyncInfoToUser: migrating ==============================================
-- add_column(:users, :in_sync, :boolean)
   -> 0.0040s
-- add_column(:users, :synced_at, :timestamp)
   -> 0.0010s
==  AddSyncInfoToUser: migrated (0.0050s) =====================================

==  RenameInSyncToIsSyncing: migrating ========================================
-- rename_column(:users, :in_sync, :is_syncing)
   -> 0.0010s
==  RenameInSyncToIsSyncing: migrated (0.0010s) ===============================

==  AddQueueToWorkers: migrating ==============================================
-- add_column(:workers, :queue, :string)
   -> 0.0020s
==  AddQueueToWorkers: migrated (0.0020s) =====================================

==  AddJobsIndexOnStateOwnerTypeOwnerId: migrating ============================
-- add_index(:jobs, ["state", "owner_id", "owner_type"], {:name=>"index_jobs_on_state_owner_type_owner_id"})
   -> 0.0070s
   -> 0 rows
==  AddJobsIndexOnStateOwnerTypeOwnerId: migrated (0.0070s) ===================

==  AddQueuedAtToJobs: migrating ==============================================
-- add_column(:jobs, :queued_at, :datetime)
   -> 0.0020s
==  AddQueuedAtToJobs: migrated (0.0020s) =====================================

==  AddPushAndPullToPermissions: migrating ====================================
-- add_column(:permissions, :push, :boolean, {:default=>false})
   -> 0.0040s
-- add_column(:permissions, :pull, :boolean, {:default=>false})
   -> 0.0030s
-- change_column_default(:permissions, :admin, false)
   -> 0.0020s
   -> 0 rows
==  AddPushAndPullToPermissions: migrated (0.0100s) ===========================

==  AddBuildsIndexOnRepositoryIdAndState: migrating ===========================
-- remove_index("builds", {:column=>"repository_id"})
   -> 0.0030s
   -> 0 rows
-- add_index("builds", ["repository_id", "state"])
   -> 0.0030s
   -> 0 rows
==  AddBuildsIndexOnRepositoryIdAndState: migrated (0.0060s) ==================

==  ArtifactsAddAggregatedAt: migrating =======================================
-- add_column(:artifacts, :aggregated_at, :datetime)
   -> 0.0020s
==  ArtifactsAddAggregatedAt: migrated (0.0040s) ==============================

==  AddArtifactParts: migrating ===============================================
-- create_table(:artifact_parts)
   -> 0.0040s
   -> 0 rows
-- add_index(:artifact_parts, [:artifact_id, :number])
   -> 0.0030s
   -> 0 rows
==  AddArtifactParts: migrated (0.0080s) ======================================

==  BuildsAddIndexOnFinishedAt: migrating =====================================
-- add_index("builds", "finished_at")
   -> 0.0030s
   -> 0 rows
==  BuildsAddIndexOnFinishedAt: migrated (0.0030s) ============================

==  CommitsAddIndexOnBranch: migrating ========================================
-- add_index("commits", "branch")
   -> 0.0030s
   -> 0 rows
==  CommitsAddIndexOnBranch: migrated (0.0030s) ===============================

==  JobsAddIndexOnCreatedAt: migrating ========================================
-- add_index("jobs", "created_at")
   -> 0.0050s
   -> 0 rows
==  JobsAddIndexOnCreatedAt: migrated (0.0050s) ===============================

==  CreateEvents: migrating ===================================================
-- create_table(:events)
   -> 0.0040s
   -> 0 rows
==  CreateEvents: migrated (0.0040s) ==========================================

==  RequestsAddResultAndMessage: migrating ====================================
-- add_column(:requests, :result, :string)
   -> 0.0010s
-- add_column(:requests, :message, :string)
   -> 0.0010s
==  RequestsAddResultAndMessage: migrated (0.0030s) ===========================

==  CreateBroadcasts: migrating ===============================================
-- create_table(:broadcasts)
   -> 0.0050s
   -> 0 rows
==  CreateBroadcasts: migrated (0.0060s) ======================================

==  EventsChangeDataToText: migrating =========================================
-- change_column(:events, :data, :text)
   -> 0.0010s
==  EventsChangeDataToText: migrated (0.0010s) ================================

==  AddEventTypeToBuilds: migrating ===========================================
-- add_column(:builds, :event_type, :string)
   -> 0.0010s
==  AddEventTypeToBuilds: migrated (0.0020s) ==================================

==  UpdateEventTypeOnBuilds: migrating ========================================
-- execute("      UPDATE builds\n        SET event_type = requests.event_type\n        FROM requests\n        WHERE builds.request_id = requests.id\n")
   -> 0.0010s
   -> 0 rows
==  UpdateEventTypeOnBuilds: migrated (0.0010s) ===============================

==  AddIndexOnRepositoryIdAndEventTypeToBuilds: migrating =====================
-- add_index(:builds, [:repository_id, :event_type])
   -> 0.0040s
   -> 0 rows
==  AddIndexOnRepositoryIdAndEventTypeToBuilds: migrated (0.0040s) ============

==  RepositoriesAddLastBuildState: migrating ==================================
-- add_column(:repositories, :last_build_state, :string)
   -> 0.0010s
==  RepositoriesAddLastBuildState: migrated (0.0020s) =========================

==  BuildsAddPreviousState: migrating =========================================
-- add_column(:builds, :previous_state, :string)
   -> 0.0010s
==  BuildsAddPreviousState: migrated (0.0010s) ================================

==  ArtifactPartsAddFinal: migrating ==========================================
-- add_column(:artifact_parts, :final, :boolean)
   -> 0.0010s
-- add_column(:artifact_parts, :created_at, :timestamp)
   -> 0.0010s
==  ArtifactPartsAddFinal: migrated (0.0020s) =================================

==  ArtifactPartsChangeContentToText: migrating ===============================
-- change_column(:artifact_parts, :content, :text)
   -> 0.0020s
==  ArtifactPartsChangeContentToText: migrated (0.0020s) ======================

==  ArtifactPartsAddIndexOnArtifactId: migrating ==============================
-- add_index(:artifact_parts, :artifact_id)
   -> 0.0030s
   -> 0 rows
==  ArtifactPartsAddIndexOnArtifactId: migrated (0.0040s) =====================

==  ArtifactPartsRemoveIndexOnArtifactId: migrating ===========================
-- remove_index(:artifact_parts, :artifact_id)
   -> 0.0020s
   -> 0 rows
==  ArtifactPartsRemoveIndexOnArtifactId: migrated (0.0030s) ==================

==  AddGithubScopesToUser: migrating ==========================================
-- add_column(:users, :github_scopes, :text)
   -> 0.0010s
==  AddGithubScopesToUser: migrated (0.0010s) =================================

==  AddIndexOnLastSeenAtToWorkers: migrating ==================================
-- add_index(:workers, :last_seen_at)
   -> 0.0030s
   -> 0 rows
==  AddIndexOnLastSeenAtToWorkers: migrated (0.0030s) =========================

==  CacheFullNameInWorkers: migrating =========================================
-- add_column(:workers, :full_name, :string)
   -> 0.0010s
-- add_index(:workers, :full_name)
   -> 0.0030s
   -> 0 rows
==  CacheFullNameInWorkers: migrated (0.0040s) ================================

==  ArtifactsAddArchivedAt: migrating =========================================
-- add_column(:artifacts, :archived_at, :datetime)
   -> 0.0010s
-- add_index(:artifacts, :archived_at)
   -> 0.0030s
   -> 0 rows
==  ArtifactsAddArchivedAt: migrated (0.0040s) ================================

==  ArtifactsAddArchivingAndVerified: migrating ===============================
-- add_column(:artifacts, :archiving, :boolean)
   -> 0.0020s
-- add_column(:artifacts, :archive_verified, :boolean)
   -> 0.0010s
-- add_index(:artifacts, :archiving)
   -> 0.0030s
   -> 0 rows
-- add_index(:artifacts, :archive_verified)
   -> 0.0030s
   -> 0 rows
==  ArtifactsAddArchivingAndVerified: migrated (0.0090s) ======================

==  CreateEmails: migrating ===================================================
-- create_table(:emails)
   -> 0.0020s
   -> 0 rows
-- add_index(:emails, :user_id)
   -> 0.0020s
   -> 0 rows
-- add_index(:emails, :email)
   -> 0.0020s
   -> 0 rows
==  CreateEmails: migrated (0.0070s) ==========================================

==  CreateLogs: migrating =====================================================
-- create_table(:logs)
   -> 0.0030s
   -> 0 rows
-- add_index(:logs, :job_id)
   -> 0.0020s
   -> 0 rows
-- add_index(:logs, :archive_verified)
   -> 0.0030s
   -> 0 rows
-- add_index(:logs, :archived_at)
   -> 0.0030s
   -> 0 rows
==  CreateLogs: migrated (0.0190s) ============================================

==  CreateLogParts: migrating =================================================
-- create_table(:log_parts)
   -> 0.0040s
   -> 0 rows
-- add_index(:log_parts, [:log_id, :number])
   -> 0.0020s
   -> 0 rows
==  CreateLogParts: migrated (0.0090s) ========================================

==  AddReferenceOnLogPartsLogId: migrating ====================================
-- execute("ALTER TABLE log_parts ADD CONSTRAINT log_parts_log_id_fk FOREIGN KEY (log_id) REFERENCES logs (id);")
   -> 0.0020s
   -> 0 rows
==  AddReferenceOnLogPartsLogId: migrated (0.0020s) ===========================

==  RenameArtifacts: migrating ================================================
-- rename_table(:artifacts, :artifacts_backup)
   -> 0.0040s
-- rename_table(:artifact_parts, :artifact_parts_backup)
   -> 0.0030s
==  RenameArtifacts: migrated (0.0070s) =======================================

==  DropArtifacts: migrating ==================================================
-- drop_table(:artifacts_backup)
   -> 0.0020s
   -> 0 rows
-- drop_table(:artifact_parts_backup)
   -> 0.0020s
   -> 0 rows
==  DropArtifacts: migrated (0.0040s) =========================================

==  AddNotNullConstraintOnLogPartsLogId: migrating ============================
-- execute("ALTER TABLE log_parts ALTER COLUMN log_id SET NOT NULL;")
   -> 0.0000s
   -> 0 rows
==  AddNotNullConstraintOnLogPartsLogId: migrated (0.0010s) ===================

==  AddPullRequestTitleToBuilds: migrating ====================================
-- add_column(:builds, :pull_request_title, :text)
   -> 0.0010s
==  AddPullRequestTitleToBuilds: migrated (0.0010s) ===========================

==  AddPullRequestNumberToBuilds: migrating ===================================
-- add_column(:builds, :pull_request_number, :integer)
   -> 0.0010s
==  AddPullRequestNumberToBuilds: migrated (0.0010s) ==========================

==  AddIndexToBuildsRequestId: migrating ======================================
-- execute("CREATE INDEX CONCURRENTLY index_builds_on_request_id ON builds(request_id)")
   -> 0.0010s
   -> 0 rows
==  AddIndexToBuildsRequestId: migrated (0.0010s) =============================

==  AddIndexToJobsOnOwnerIdOwnerTypeAndState: migrating =======================
-- execute("CREATE INDEX CONCURRENTLY index_jobs_on_owner_id_and_owner_type_and_state ON jobs(owner_id, owner_type, state)")
   -> 0.0010s
   -> 0 rows
==  AddIndexToJobsOnOwnerIdOwnerTypeAndState: migrated (0.0010s) ==============

==  AddBranchToBuilds: migrating ==============================================
-- add_column(:builds, :branch, :string)
   -> 0.0010s
==  AddBranchToBuilds: migrated (0.0010s) =====================================

==  AddMoreIndexesToBuilds: migrating =========================================
-- execute("      CREATE INDEX CONCURRENTLY index_builds_on_repository_id_and_event_type_and_state_and_branch\n        ON builds(repository_id, event_type, state, branch);\n")
   -> 0.0010s
   -> 0 rows
==  AddMoreIndexesToBuilds: migrated (0.0010s) ================================

==  AddIndexOnBuildState: migrating ===========================================
-- execute("      CREATE INDEX CONCURRENTLY index_builds_on_state\n        ON builds(state);\n")
   -> 0.0010s
   -> 0 rows
==  AddIndexOnBuildState: migrated (0.0010s) ==================================

==  UpdateFinishedJobs: migrating =============================================
-- execute("UPDATE jobs SET state = 'passed' WHERE state = 'finished' AND result = 0 AND type = 'Job::Test'")
   -> 0.0010s
   -> 0 rows
-- execute("UPDATE jobs SET state = 'failed' WHERE state = 'finished' AND result = 1 AND type = 'Job::Test'")
   -> 0.0010s
   -> 0 rows
-- execute("UPDATE jobs SET state = 'errored' WHERE state = 'finished' AND result IS NULL AND type = 'Job::Test'")
   -> 0.0010s
   -> 0 rows
-- execute("SELECT COUNT(*) FROM jobs WHERE state = 'finished' AND type = 'Job::Test'")
   -> 0.0000s
==  UpdateFinishedJobs: migrated (0.0040s) ====================================

==  UpdateFinishedBuilds: migrating ===========================================
-- execute("UPDATE builds SET state = 'passed' WHERE state = 'finished' AND result = 0")
   -> 0.0010s
   -> 0 rows
-- execute("UPDATE builds SET state = 'failed' WHERE state = 'finished' AND result = 1")
   -> 0.0000s
   -> 0 rows
-- execute("UPDATE builds SET state = 'errored' WHERE state = 'finished' AND result IS NULL")
   -> 0.0000s
   -> 0 rows
-- execute("SELECT COUNT(*) FROM builds WHERE state = 'finished'")
   -> 0.0010s
==  UpdateFinishedBuilds: migrated (0.0030s) ==================================

==  RemoveUnusedBuildColumns: migrating =======================================
-- remove_column(:builds, :result)
   -> 0.0010s
-- remove_column(:builds, :status)
   -> 0.0010s
-- remove_column(:builds, :previous_result)
   -> 0.0010s
-- remove_column(:builds, :agent)
   -> 0.0010s
-- remove_column(:builds, :language)
   -> 0.0010s
-- remove_column(:builds, :archived_at)
   -> 0.0000s
==  RemoveUnusedBuildColumns: migrated (0.0070s) ==============================

==  RemoveUnusedJobColumns: migrating =========================================
-- remove_column(:jobs, :status)
   -> 0.0010s
-- remove_column(:jobs, :job_id)
   -> 0.0010s
-- remove_column(:jobs, :retries)
   -> 0.0010s
==  RemoveUnusedJobColumns: migrated (0.0030s) ================================

==  AddGithubIdToUsers: migrating =============================================
-- add_column(:repositories, :github_id, :integer)
   -> 0.0010s
-- add_index(:repositories, :github_id)
   -> 0.0030s
   -> 0 rows
==  AddGithubIdToUsers: migrated (0.0050s) ====================================

==  AddDefaultBranchToRepositories: migrating =================================
-- add_column(:repositories, :default_branch, :string)
   -> 0.0010s
==  AddDefaultBranchToRepositories: migrated (0.0010s) ========================

==  AddGithubLanguageToRepositories: migrating ================================
-- add_column(:repositories, :github_language, :string)
   -> 0.0010s
==  AddGithubLanguageToRepositories: migrated (0.0010s) =======================

==  AddPurgedAtToLogs: migrating ==============================================
-- add_column(:logs, :purged_at, :timestamp)
   -> 0.0010s
==  AddPurgedAtToLogs: migrated (0.0010s) =====================================

==  RemoveUnusedRepositoryColumns: migrating ==================================
-- remove_column(:repositories, :last_duration)
   -> 0.0010s
-- remove_column(:repositories, :last_build_status)
   -> 0.0010s
-- remove_column(:repositories, :last_build_result)
   -> 0.0010s
-- remove_column(:repositories, :last_build_language)
   -> 0.0010s
==  RemoveUnusedRepositoryColumns: migrated (0.0040s) =========================

==  AddUniqueIndexOnUsersGithubIdAndRemoveUniqueIndexOnUsersLogin: migrating ==
-- execute("DROP INDEX index_users_on_login")
   -> 0.0010s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_users_on_login ON users(login)")
   -> 0.0010s
   -> 0 rows
-- execute("DROP INDEX index_users_on_github_id")
   -> 0.0010s
   -> 0 rows
-- execute("CREATE UNIQUE INDEX CONCURRENTLY index_users_on_github_id ON users(github_id)")
   -> 0.0010s
   -> 0 rows
==  AddUniqueIndexOnUsersGithubIdAndRemoveUniqueIndexOnUsersLogin: migrated (0.0040s) 

==  AddExtraColumnsToOrganizations: migrating =================================
-- add_column(:organizations, :avatar_url, :string)
   -> 0.0010s
-- add_column(:organizations, :location, :string)
   -> 0.0010s
-- add_column(:organizations, :email, :string)
   -> 0.0000s
-- add_column(:organizations, :company, :string)
   -> 0.0000s
-- add_column(:organizations, :homepage, :string)
   -> 0.0000s
==  AddExtraColumnsToOrganizations: migrated (0.0050s) ========================

==  AddIndexOnGithubIdToOrganizations: migrating ==============================
-- execute("CREATE UNIQUE INDEX CONCURRENTLY index_organizations_on_github_id ON organizations(github_id)")
   -> 0.0010s
   -> 0 rows
==  AddIndexOnGithubIdToOrganizations: migrated (0.0010s) =====================

==  CreateAnnotations: migrating ==============================================
-- create_table(:annotations)
   -> 0.0030s
   -> 0 rows
==  CreateAnnotations: migrated (0.0040s) =====================================

==  CreateAnnotationProviders: migrating ======================================
-- create_table(:annotation_providers)
   -> 0.0030s
   -> 0 rows
==  CreateAnnotationProviders: migrated (0.0030s) =============================

==  AddAnnotationProviderIdToAnnotations: migrating ===========================
-- add_column(:annotations, :annotation_provider_id, :integer, {:null=>false})
   -> 0.0010s
   -> 0 rows
==  AddAnnotationProviderIdToAnnotations: migrated (0.0010s) ==================

==  AddCanceledAtToJobsAndBuilds: migrating ===================================
-- add_column(:builds, :canceled_at, :datetime)
   -> 0.0010s
-- add_column(:jobs, :canceled_at, :datetime)
   -> 0.0010s
==  AddCanceledAtToJobsAndBuilds: migrated (0.0020s) ==========================

==  AddIndexOnRepositoryGithubId: migrating ===================================
-- execute("DROP INDEX index_repositories_on_github_id")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_github_id ON repositories(github_id)")
   -> 0.0000s
   -> 0 rows
==  AddIndexOnRepositoryGithubId: migrated (0.0020s) ==========================

==  AddCachedMatrixIdsToBuilds: migrating =====================================
-- execute("ALTER TABLE builds ADD COLUMN cached_matrix_ids integer[]")
   -> 0.0010s
   -> 0 rows
==  AddCachedMatrixIdsToBuilds: migrated (0.0010s) ============================

==  CreateIndexOnBuildsIdDescAndRepositoryIdAndEventType: migrating ===========
-- execute("CREATE INDEX CONCURRENTLY index_builds_on_id_repository_id_and_event_type_desc ON builds (id DESC, repository_id, event_type);")
   -> 0.0010s
   -> 0 rows
==  CreateIndexOnBuildsIdDescAndRepositoryIdAndEventType: migrated (0.0010s) ==

==  AddUniqueIndexOnRepositoryGithubId: migrating =============================
-- execute("DROP INDEX index_repositories_on_github_id")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE UNIQUE INDEX CONCURRENTLY index_repositories_on_github_id ON repositories(github_id)")
   -> 0.0000s
   -> 0 rows
==  AddUniqueIndexOnRepositoryGithubId: migrated (0.0020s) ====================

==  AddSettingsToRepositories: migrating ======================================
-- add_column(:repositories, :settings, :json)
   -> 0.0010s
==  AddSettingsToRepositories: migrated (0.0010s) =============================

==  RemoveWorkersTableAndIndexes: migrating ===================================
-- drop_table(:workers)
   -> 0.0020s
   -> 0 rows
==  RemoveWorkersTableAndIndexes: migrated (0.0020s) ==========================

==  RemoveEventsTable: migrating ==============================================
-- drop_table(:events)
   -> 0.0020s
   -> 0 rows
==  RemoveEventsTable: migrated (0.0020s) =====================================

==  RemoveAnnotationImageInfo: migrating ======================================
-- remove_column(:annotations, :image_url)
   -> 0.0010s
-- remove_column(:annotations, :image_alt)
   -> 0.0010s
==  RemoveAnnotationImageInfo: migrated (0.0030s) =============================

==  AddStatusToAnnotations: migrating =========================================
-- add_column(:annotations, :status, :string)
   -> 0.0010s
==  AddStatusToAnnotations: migrated (0.0010s) ================================

==  AddIndicesToRequests: migrating ===========================================
-- execute("CREATE INDEX CONCURRENTLY index_requests_on_repository_id ON requests(repository_id)")
   -> 0.0010s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_requests_on_commit_id ON requests(commit_id)")
   -> 0.0010s
   -> 0 rows
==  AddIndicesToRequests: migrated (0.0020s) ==================================

==  AddIndicesToMemberships: migrating ========================================
-- execute("CREATE INDEX CONCURRENTLY index_memberships_on_user_id ON memberships(user_id)")
   -> 0.0010s
   -> 0 rows
==  AddIndicesToMemberships: migrated (0.0010s) ===============================

==  RemoveUnusedIndices: migrating ============================================
-- execute("DROP INDEX CONCURRENTLY index_commits_on_commit")
   -> 0.0000s
   -> 0 rows
-- execute("DROP INDEX CONCURRENTLY index_builds_on_state")
   -> 0.0000s
   -> 0 rows
-- execute("DROP INDEX CONCURRENTLY index_commits_on_branch")
   -> 0.0000s
   -> 0 rows
-- execute("DROP INDEX CONCURRENTLY index_users_on_github_oauth_token")
   -> 0.0010s
   -> 0 rows
-- execute("DROP INDEX CONCURRENTLY index_builds_on_finished_at")
   -> 0.0010s
   -> 0 rows
-- execute("DROP INDEX CONCURRENTLY index_jobs_on_queue_and_state")
   -> 0.0010s
   -> 0 rows
-- execute("DROP INDEX CONCURRENTLY index_jobs_on_created_at")
   -> 0.0010s
   -> 0 rows
==  RemoveUnusedIndices: migrated (0.0060s) ===================================

==  AddRemovedInfoToLogs: migrating ===========================================
-- add_column(:logs, :removed_at, :timestamp)
   -> 0.0010s
-- add_column(:logs, :removed_by, :integer)
   -> 0.0010s
==  AddRemovedInfoToLogs: migrated (0.0050s) ==================================

==  AddEducationFieldToUser: migrating ========================================
-- add_column(:users, :education, :boolean)
   -> 0.0010s
==  AddEducationFieldToUser: migrated (0.0010s) ===============================

==  JobsAddReceivedAt: migrating ==============================================
-- add_column(:jobs, :received_at, :datetime)
   -> 0.0010s
==  JobsAddReceivedAt: migrated (0.0010s) =====================================

==  BuildsAddReceivedAt: migrating ============================================
-- add_column(:builds, :received_at, :datetime)
   -> 0.0010s
==  BuildsAddReceivedAt: migrated (0.0010s) ===================================

==  AddIndexOnRepositoryIdToCommits: migrating ================================
-- execute("DROP INDEX IF EXISTS index_commits_on_repository_id")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_commits_on_repository_id ON commits(repository_id)")
   -> 0.0010s
   -> 0 rows
==  AddIndexOnRepositoryIdToCommits: migrated (0.0010s) =======================

==  IndexRequestsOnCreatedAt: migrating =======================================
-- execute("DROP INDEX IF EXISTS index_requests_on_created_at")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_requests_on_created_at ON requests(created_at)")
   -> 0.0000s
   -> 0 rows
==  IndexRequestsOnCreatedAt: migrated (0.0020s) ==============================

==  CreateBranches: migrating =================================================
-- create_table(:branches)
   -> 0.0020s
   -> 0 rows
-- add_index(:branches, [:repository_id, :name], {:unique=>true})
   -> 0.0020s
   -> 0 rows
==  CreateBranches: migrated (0.0060s) ========================================

==  AddNextBuildNumberToRepository: migrating =================================
-- add_column(:repositories, :next_build_number, :integer)
   -> 0.0010s
==  AddNextBuildNumberToRepository: migrated (0.0010s) ========================

==  AddActiveIndexToRepository: migrating =====================================
-- execute("DROP INDEX IF EXISTS index_repositories_on_active")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_active ON repositories(active)")
   -> 0.0010s
   -> 0 rows
==  AddActiveIndexToRepository: migrated (0.0010s) ============================

==  AddOwnerTypeAndOwnerIdIndexesToBuilds: migrating ==========================
-- execute("DROP INDEX IF EXISTS index_builds_on_owner_type")
   -> 0.0010s
   -> 0 rows
-- execute("DROP INDEX IF EXISTS index_builds_on_owner_id")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_builds_on_owner_type ON builds(owner_type)")
   -> 0.0010s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_builds_on_owner_id ON builds(owner_id)")
   -> 0.0000s
   -> 0 rows
==  AddOwnerTypeAndOwnerIdIndexesToBuilds: migrated (0.0040s) =================

==  AddOwnerTypeAndOwnerIdIndexesToRepositories: migrating ====================
-- execute("DROP INDEX IF EXISTS index_repositories_on_owner_type")
   -> 0.0000s
   -> 0 rows
-- execute("DROP INDEX IF EXISTS index_repositories_on_owner_id")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_owner_type ON repositories(owner_type)")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_owner_id ON repositories(owner_id)")
   -> 0.0000s
   -> 0 rows
==  AddOwnerTypeAndOwnerIdIndexesToRepositories: migrated (0.0040s) ===========

==  AddSlugIndexToRepositories: migrating =====================================
-- execute("CREATE EXTENSION IF NOT EXISTS pg_trgm")
   -> 0.0070s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_slug ON repositories USING gin((owner_name || '/' || name) gin_trgm_ops)")
   -> 0.0010s
   -> 0 rows
==  AddSlugIndexToRepositories: migrated (0.0090s) ============================

==  AddTokenIndexToTokens: migrating ==========================================
-- execute("DROP INDEX IF EXISTS index_tokens_on_token")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_tokens_on_token ON tokens(token)")
   -> 0.0010s
   -> 0 rows
==  AddTokenIndexToTokens: migrated (0.0020s) =================================

==  AddLoginIndexToOrganizations: migrating ===================================
-- execute("DROP INDEX IF EXISTS index_organizations_on_login")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_organizations_on_login ON organizations(login)")
   -> 0.0000s
   -> 0 rows
==  AddLoginIndexToOrganizations: migrated (0.0010s) ==========================

==  AddLowerCaseIndices: migrating ============================================
-- execute("DROP INDEX IF EXISTS index_organizations_on_lower_login")
   -> 0.0010s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_organizations_on_lower_login ON organizations USING btree(lower(login))")
   -> 0.0010s
   -> 0 rows
-- execute("DROP INDEX IF EXISTS index_users_on_lower_login")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_users_on_lower_login ON users USING btree(lower(login))")
   -> 0.0000s
   -> 0 rows
-- execute("DROP INDEX IF EXISTS index_repositories_on_lower_name")
   -> 0.0000s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_lower_name ON repositories USING btree(lower(name))")
   -> 0.0010s
   -> 0 rows
-- execute("DROP INDEX IF EXISTS index_repositories_on_lower_owner_name")
   -> 0.0010s
   -> 0 rows
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_lower_owner_name ON repositories USING btree(lower(owner_name))")
   -> 0.0010s
   -> 0 rows
==  AddLowerCaseIndices: migrated (0.0070s) ===================================

==  RepositoriesAddIndexOwnerName: migrating ==================================
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_owner_name ON repositories(owner_name)")
   -> 0.0010s
   -> 0 rows
==  RepositoriesAddIndexOwnerName: migrated (0.0010s) =========================

==  RepositoriesAddIndexName: migrating =======================================
-- execute("CREATE INDEX CONCURRENTLY index_repositories_on_name ON repositories(name)")
   -> 0.0010s
   -> 0 rows
==  RepositoriesAddIndexName: migrated (0.0010s) ==============================

==  RepositoriesDropIndexOwnerNameName: migrating =============================
-- execute("DROP INDEX CONCURRENTLY index_repositories_on_owner_name_and_name")
   -> 0.0010s
   -> 0 rows
==  RepositoriesDropIndexOwnerNameName: migrated (0.0010s) ====================

==  BuildsAddIndexEventType: migrating ========================================
-- execute("CREATE INDEX CONCURRENTLY index_builds_on_event_type ON builds (event_type)")
   -> 0.0010s
   -> 0 rows
==  BuildsAddIndexEventType: migrated (0.0010s) ===============================

==  BuildsAddIndexRepositoryId: migrating =====================================
-- execute("CREATE INDEX CONCURRENTLY index_builds_on_repository_id ON builds (repository_id)")
   -> 0.0020s
   -> 0 rows
==  BuildsAddIndexRepositoryId: migrated (0.0020s) ============================

==  BuildsAddIndexState: migrating ============================================
-- execute("CREATE INDEX CONCURRENTLY index_builds_on_state ON builds (state)")
   -> 0.0010s
   -> 0 rows
==  BuildsAddIndexState: migrated (0.0010s) ===================================

==  BuildsAddIndexBranch: migrating ===========================================
-- execute("CREATE INDEX CONCURRENTLY index_builds_on_branch ON builds (branch)")
   -> 0.0010s
   -> 0 rows
==  BuildsAddIndexBranch: migrated (0.0020s) ==================================

==  BuildsDropIndexRepositoryIdAndState: migrating ============================
-- execute("DROP INDEX CONCURRENTLY index_builds_on_repository_id_and_state")
   -> 0.0000s
   -> 0 rows
==  BuildsDropIndexRepositoryIdAndState: migrated (0.0020s) ===================

==  BuildsDropIndexRepositoryIdAndEventType: migrating ========================
-- execute("DROP INDEX CONCURRENTLY index_builds_on_repository_id_and_event_type")
   -> 0.0010s
   -> 0 rows
==  BuildsDropIndexRepositoryIdAndEventType: migrated (0.0010s) ===============

==  BuildsDropIndexIdRepositoryIdAndEventTypeDesc: migrating ==================
-- execute("DROP INDEX CONCURRENTLY index_builds_on_id_repository_id_and_event_type_desc")
   -> 0.0010s
   -> 0 rows
==  BuildsDropIndexIdRepositoryIdAndEventTypeDesc: migrated (0.0010s) =========

==  BuildsDropIndexRepositoryIdAndEventTypeAndStateAndBranch: migrating =======
-- execute("DROP INDEX CONCURRENTLY index_builds_on_repository_id_and_event_type_and_state_and_bran")
   -> 0.0010s
   -> 0 rows
==  BuildsDropIndexRepositoryIdAndEventTypeAndStateAndBranch: migrated (0.0020s) 

==  JobsAddIndexOwnerId: migrating ============================================
-- execute("CREATE INDEX CONCURRENTLY index_jobs_on_owner_id ON jobs (owner_id)")
   -> 0.0010s
   -> 0 rows
==  JobsAddIndexOwnerId: migrated (0.0020s) ===================================

==  JobsAddIndexOwnerType: migrating ==========================================
-- execute("CREATE INDEX CONCURRENTLY index_jobs_on_owner_type ON jobs (owner_type)")
   -> 0.0020s
   -> 0 rows
==  JobsAddIndexOwnerType: migrated (0.0020s) =================================

==  JobsAddIndexSourceId: migrating ===========================================
-- execute("CREATE INDEX CONCURRENTLY index_jobs_on_source_id ON jobs (source_id)")
   -> 0.0010s
   -> 0 rows
==  JobsAddIndexSourceId: migrated (0.0020s) ==================================

==  JobsAddIndexSourceType: migrating =========================================
-- execute("CREATE INDEX CONCURRENTLY index_jobs_on_source_type ON jobs (source_type)")
   -> 0.0010s
   -> 0 rows
==  JobsAddIndexSourceType: migrated (0.0010s) ================================

==  JobsAddIndexType: migrating ===============================================
-- execute("CREATE INDEX CONCURRENTLY index_jobs_on_type ON jobs (type)")
   -> 0.0010s
   -> 0 rows
==  JobsAddIndexType: migrated (0.0010s) ======================================

==  JobsDropIndexOwnerIdAndOwnerTypeAndState: migrating =======================
-- execute("DROP INDEX CONCURRENTLY index_jobs_on_owner_id_and_owner_type_and_state")
   -> 0.0010s
   -> 0 rows
==  JobsDropIndexOwnerIdAndOwnerTypeAndState: migrated (0.0010s) ==============

==  JobsDropIndexStateOwnerTypeOwnerId: migrating =============================
-- execute("DROP INDEX CONCURRENTLY index_jobs_on_state_owner_type_owner_id")
   -> 0.0000s
   -> 0 rows
==  JobsDropIndexStateOwnerTypeOwnerId: migrated (0.0000s) ====================

==  JobsDropIndexTypeAndSourceIdAndSourceType: migrating ======================
-- execute("DROP INDEX CONCURRENTLY index_jobs_on_type_and_owner_id_and_owner_type")
   -> 0.0010s
   -> 0 rows
==  JobsDropIndexTypeAndSourceIdAndSourceType: migrated (0.0010s) =============

==  JobsAddIndexState: migrating ==============================================
-- execute("CREATE INDEX CONCURRENTLY index_jobs_on_state ON jobs (state)")
   -> 0.0010s
   -> 0 rows
==  JobsAddIndexState: migrated (0.0010s) =====================================

==  JobsAddIndexQueue: migrating ==============================================
-- execute("CREATE INDEX CONCURRENTLY index_jobs_on_queue ON jobs (queue)")
   -> 0.0000s
   -> 0 rows
==  JobsAddIndexQueue: migrated (0.0010s) =====================================

==  TokensAddIndexUserId: migrating ===========================================
-- execute("CREATE INDEX CONCURRENTLY index_tokens_on_user_id ON tokens (user_id)")
   -> 0.0000s
   -> 0 rows
==  TokensAddIndexUserId: migrated (0.0010s) ==================================

==  ReposAddInvalidatedAt: migrating ==========================================
-- add_column(:repositories, :invalidated_at, :datetime)
   -> 0.0010s
==  ReposAddInvalidatedAt: migrated (0.0020s) =================================

==  BroadcastsAddCategory: migrating ==========================================
-- add_column(:broadcasts, :category, :string)
   -> 0.0000s
==  BroadcastsAddCategory: migrated (0.0020s) =================================

** Invoke db:_dump (first_time)
** Execute db:_dump
** Invoke db:structure:dump (first_time)
** Invoke environment 
** Invoke db:load_config 
** Execute db:structure:dump
travis_time:end:04aa0144:start=1447267252607919731,finish=1447267265299635161,duration=12691715430
[0Ktravis_fold:end:before_script.2
[0Ktravis_time:start:17376fe8
[0K$ ./build.sh
I TID=13182 Setting up Travis::Core
/home/travis/.rvm/rubies/jruby-1.7.16/bin/jruby -S rspec ./spec/travis/addons/archive/event_handler_spec.rb ./spec/travis/addons/archive/task_spec.rb ./spec/travis/addons/campfire/event_handler_spec.rb ./spec/travis/addons/campfire/instruments/event_handler_spec.rb ./spec/travis/addons/email/event_handler_spec.rb ./spec/travis/addons/email/instruments/event_handler_spec.rb ./spec/travis/addons/flowdock/event_handler_spec.rb ./spec/travis/addons/flowdock/instruments/event_handler_spec.rb ./spec/travis/addons/github_status/event_handler_spec.rb ./spec/travis/addons/github_status/instruments/event_handler_spec.rb ./spec/travis/addons/hipchat/event_handler_spec.rb ./spec/travis/addons/hipchat/instruments/event_handler_spec.rb ./spec/travis/addons/irc/event_handler_spec.rb ./spec/travis/addons/irc/instruments/event_handler_spec.rb ./spec/travis/addons/pusher/event_handler_spec.rb ./spec/travis/addons/pusher/instruments/event_handler_spec.rb ./spec/travis/addons/pushover/event_handler_spec.rb ./spec/travis/addons/pushover/instruments/event_handler_spec.rb ./spec/travis/addons/slack/event_handler_spec.rb ./spec/travis/addons/slack/instruments/event_handler_spec.rb ./spec/travis/addons/states_cache/event_handler_spec.rb ./spec/travis/addons/webhook/event_handler_spec.rb ./spec/travis/addons/webhook/instruments/event_handler_spec.rb ./spec/travis/api/v0/event/build_spec.rb ./spec/travis/api/v0/pusher/annotation/created_spec.rb ./spec/travis/api/v0/pusher/annotation/updated_spec.rb ./spec/travis/api/v0/pusher/build_spec.rb ./spec/travis/api/v0/pusher/job_spec.rb ./spec/travis/api/v0/worker/job/test_spec.rb ./spec/travis/api/v1/archive/build/job_spec.rb ./spec/travis/api/v1/archive/build_spec.rb ./spec/travis/api/v1/http/branches_spec.rb ./spec/travis/api/v1/http/build_spec.rb ./spec/travis/api/v1/http/builds_spec.rb ./spec/travis/api/v1/http/hooks_spec.rb ./spec/travis/api/v1/http/job_spec.rb ./spec/travis/api/v1/http/jobs_spec.rb ./spec/travis/api/v1/http/repositories_spec.rb ./spec/travis/api/v1/http/repository_spec.rb ./spec/travis/api/v1/http/user_spec.rb ./spec/travis/api/v1/webhook/build/finished_spec.rb ./spec/travis/api_spec.rb ./spec/travis/chunkifier_spec.rb ./spec/travis/commit_command_spec.rb ./spec/travis/config_spec.rb ./spec/travis/enqueue/services/enqueue_jobs/limit_spec.rb ./spec/travis/enqueue/services/enqueue_jobs_spec.rb ./spec/travis/event/config_spec.rb ./spec/travis/event/handler/metrics_spec.rb ./spec/travis/event/handler/trail_spec.rb ./spec/travis/event/subscription_spec.rb ./spec/travis/features_spec.rb ./spec/travis/github/education_spec.rb ./spec/travis/github/services/fetch_config_spec.rb ./spec/travis/github/services/find_or_create_org_spec.rb ./spec/travis/github/services/find_or_create_repo_spec.rb ./spec/travis/github/services/find_or_create_user_spec.rb ./spec/travis/github/services/set_hook_spec.rb ./spec/travis/github/services/sync_user/organizations/filter_spec.rb ./spec/travis/github/services/sync_user/organizations_spec.rb ./spec/travis/github/services/sync_user/repositories_spec.rb ./spec/travis/github/services/sync_user/repository_spec.rb ./spec/travis/github/services/sync_user/reset_token_spec.rb ./spec/travis/github/services/sync_user/user_info_spec.rb ./spec/travis/github/services/sync_user_spec.rb ./spec/travis/logs/services/aggregate_spec.rb ./spec/travis/logs/services/archive_spec.rb ./spec/travis/logs/services/receive_spec.rb ./spec/travis/model/annotation_provider_spec.rb ./spec/travis/model/annotation_spec.rb ./spec/travis/model/broadcast_spec.rb ./spec/travis/model/build/compat_spec.rb ./spec/travis/model/build/config/matrix_spec.rb ./spec/travis/model/build/config/obfuscate_spec.rb ./spec/travis/model/build/config_spec.rb ./spec/travis/model/build/denormalize_spec.rb ./spec/travis/model/build/matrix_spec.rb ./spec/travis/model/build/metrics_spec.rb ./spec/travis/model/build/result_message_spec.rb ./spec/travis/model/build/states_spec.rb ./spec/travis/model/build/update_branch_spec.rb ./spec/travis/model/build_spec.rb ./spec/travis/model/commit_spec.rb ./spec/travis/model/encrypted_column_spec.rb ./spec/travis/model/job/cleanup_spec.rb ./spec/travis/model/job/queue_spec.rb ./spec/travis/model/job/test_spec.rb ./spec/travis/model/job_spec.rb ./spec/travis/model/log/log_spec.rb ./spec/travis/model/organization_spec.rb ./spec/travis/model/permission_spec.rb ./spec/travis/model/repository/settings/ssh_key_spec.rb ./spec/travis/model/repository/settings_spec.rb ./spec/travis/model/repository/status_image_spec.rb ./spec/travis/model/repository_spec.rb ./spec/travis/model/request/approval_spec.rb ./spec/travis/model/request/branches_spec.rb ./spec/travis/model/request/states_spec.rb ./spec/travis/model/request_spec.rb ./spec/travis/model/ssl_key_spec.rb ./spec/travis/model/token_spec.rb ./spec/travis/model/url_spec.rb ./spec/travis/model/user/oauth_spec.rb ./spec/travis/model/user_spec.rb ./spec/travis/notification/instrument_spec.rb ./spec/travis/notification/publisher/log_spec.rb ./spec/travis/notification/publisher/redis_spec.rb ./spec/travis/redis_pool_spec.rb ./spec/travis/requests/services/receive/api_spec.rb ./spec/travis/requests/services/receive/pull_request_spec.rb ./spec/travis/requests/services/receive/push_spec.rb ./spec/travis/requests/services/receive_spec.rb ./spec/travis/requests/services/simulate_receive_spec.rb ./spec/travis/secure_config_spec.rb ./spec/travis/services/cancel_build_spec.rb ./spec/travis/services/cancel_job_spec.rb ./spec/travis/services/find_admin_spec.rb ./spec/travis/services/find_annotation_spec.rb ./spec/travis/services/find_branch_spec.rb ./spec/travis/services/find_branches_spec.rb ./spec/travis/services/find_build_spec.rb ./spec/travis/services/find_builds_spec.rb ./spec/travis/services/find_caches_spec.rb ./spec/travis/services/find_daily_repos_stats_spec.rb ./spec/travis/services/find_daily_tests_stats_spec.rb ./spec/travis/services/find_hooks_spec.rb ./spec/travis/services/find_job_spec.rb ./spec/travis/services/find_jobs_spec.rb ./spec/travis/services/find_log_spec.rb ./spec/travis/services/find_repo_key_spec.rb ./spec/travis/services/find_repo_settings_spec.rb ./spec/travis/services/find_repo_spec.rb ./spec/travis/services/find_repos_spec.rb ./spec/travis/services/find_request_spec.rb ./spec/travis/services/find_requests_spec.rb ./spec/travis/services/find_user_accounts_spec.rb ./spec/travis/services/next_build_number_spec.rb ./spec/travis/services/regenerate_repo_key_spec.rb ./spec/travis/services/remove_log_spec.rb ./spec/travis/services/reset_model_spec.rb ./spec/travis/services/sync_user_spec.rb ./spec/travis/services/update_annotation_spec.rb ./spec/travis/services/update_hook_spec.rb ./spec/travis/services/update_job_spec.rb ./spec/travis/services/update_log_spec.rb ./spec/travis/services/update_user_spec.rb ./spec/travis/services_spec.rb ./spec/travis/settings/collection_spec.rb ./spec/travis/settings/default_settings_spec.rb ./spec/travis/settings/model_spec.rb ./spec/travis/settings_spec.rb ./spec/travis/states_cache_spec.rb ./spec/travis/task_spec.rb ./spec/travis/travis_yml_stats_spec.rb ./spec/travis_spec.rb
I TID=13176 Setting up Travis::Core
Run options: include {:focused=>true}

All examples were filtered out; ignoring {:focused=>true}

Travis::CommitCommand
  skip
[32m    is invoked by a commit message containing [CI skip][0m
[32m    is invoked by a commit message containing [ci skip][0m
[32m    is not invoked by default[0m
[32m    is invoked by a commit message containing [ci:skip][0m
[32m    is not invoked by a commit message containing [ci unknown-command][0m
[32m    is invoked by the special case: [skip ci][0m

Travis::Logs::Services::Archive
  in production
    behaves like archive
[32m      fetches the log from the api[0m
[32m      retries and finally raises if fetch can not find the log[0m
[32m      stores the log to s3[0m
[32m      verifies the log size[0m
[32m      retries and finally raises if verification fails[0m
[32m      retries and finally raises if reporting fails[0m
[32m      reports to the api[0m
[32m      retries and finally raises if storage fails[0m
[32m      retries and finally raises if fetch fails[0m
  in staging
    behaves like archive
[32m      fetches the log from the api[0m
[32m      retries and finally raises if fetch can not find the log[0m
[32m      stores the log to s3[0m
[32m      verifies the log size[0m
[32m      retries and finally raises if verification fails[0m
[32m      retries and finally raises if reporting fails[0m
[32m      reports to the api[0m
[32m      retries and finally raises if storage fails[0m
[32m      retries and finally raises if fetch fails[0m

Travis::Services::UpdateHook
[32m  finds the repo by the given params[0m
[32m  sets the given :active param to the hook[0m
  sets the repo to the active param
[32m    given "true"[0m
[32m    given false[0m
[32m    given true[0m
[32m    given "false"[0m

Travis::Services::UpdateLog
[32m  updates the log[0m
  the instrument
[32m    publishes a event[0m

Travis::Addons::Email::Instruments::EventHandler
[32m  publishes a event[0m

Travis::Github::Services::SyncUser
  new_user?
[32m    doesn't send an email with the welcome email disabled[0m
[32m    doesn't send an email to an existing user[0m
[32m    sends an email to a new user[0m
[32m    doesn't send an email if the user is older than 48 hours[0m
[32m    doesn't send an email if the user doesn't have a valid email[0m
  syncing
[32m    sets synced_at[0m
[32m    sets is_syncing?[0m
[32m    returns the block value[0m
[32m    raises exceptions[0m
[32m    ensures the user is set back to not sycing when an exception raises[0m
  run
[32m    resets is_syncing even on error[0m

Travis::Services::FindRepos
[32m  applies timeline only if no other params are given[0m
[32m  returns the recent timeline when given empty params[0m
[32m  finds repositories by a given list of ids[0m
  given an owner_name name and active param
[32m    finds a repository with that owner_name even if it does not have any builds[0m
  given an owner_name name
[32m    finds a repository with that owner_name[0m
[32m    does not find a repository with another owner name[0m
  given a member name
[32m    finds a repository where that member has permissions[0m
[32m    does not find a repository where the member does not have permissions[0m
  given a slug name
[32m    finds a repository with that slug[0m
[32m    does not find a repository with a different slug[0m
  given a search phrase
[32m    finds a repository matching that phrase[0m
[32m    does not find a repository that does not match that phrase[0m
  given a list of ids
[32m    finds included repositories[0m
[32m    does not find a repositories that are not included[0m

Travis::RedisPool
[32m  fails when a non-supported operation is called[0m
[32m  forwards operations to redis[0m
[32m  increases the metric for number of operations[0m
[32m  adds a wait time for the pool checkout[0m

Travis::Enqueue::Services::EnqueueJobs::Limit
[32m  allows the first 8 jobs if the org is allowed 8 jobs[0m
[32m  allows one job if 4 are running by default[0m
[32m  allows the first 5 jobs if none are running by default[0m
[32m  allows all jobs if the limit is set to -1[0m
[32m  gives a readable report[0m
  limit per repository
[32m    doesn't fail for repositories with no running jobs and restriction enabled[0m
[32m    should schedule jobs for other repositories[0m
[32m    should only schedule the maximum number of builds for a single repository[0m
[32m    doesn't allow for a repository maximum higher than the total maximum[0m
[32m    doesn't add the filter with limit per repo disabled[0m

Travis::Services::FindJobs
  run
[32m    finds jobs by a given list of ids[0m
[32m    does not find jobs on other queues[0m
[32m    finds jobs on the given queue[0m
[32m    finds jobs by state[0m
[32m    finds jobs that are about to run without any args[0m
  updated_at
[33m    returns the latest updated_at time (PENDING: rack cache is disabled, so not much need for caching now)[0m

Travis::Services::RemoveLog
  when a job is found
[32m    uses a log part for storing the content[0m
[32m    updates logs with desired information[0m
[32m    runs successfully[0m
    when log is already removed
[32m      raises LogAlreadyRemoved error[0m
  when user does not have push permissions
[32m    raises AuthorizationDenied[0m
  when job is not finished
[32m    raises JobUnfinished error[0m
  when a job is not found
[32m    raises ActiveRecord::RecordNotFound exception[0m

Travis::Services::Helpers
  service
[32m    passes the given params[0m
[32m    passes the given user[0m
[32m    given :foo as a type and :stuff as a name it returns an instance of Foo::Stuff[0m
[32m    defaults params to {}[0m
[32m    defaults the user to the current user if the object responds to :current_user[0m
[32m    defaults the user to nil if the object does not respond to :current_user[0m

Travis::Addons::Irc::Instruments::EventHandler
[32m  publishes a event[0m

Travis::Services::CancelJob
  run
[32m    should not be able to cancel job if user does not have pull permission[0m
[32m    should not cancel the job if it's not cancelable[0m
[32m    should cancel the job if it's cancelable[0m

Travis::Services::FindBranches
[32m  returns an empty build scope when the repository could not be found[0m
[32m  scopes to the given repository[0m
[32m  finds the last builds of the given repository grouped per branch[0m
[32m  finds branches by a given list of ids[0m

Travis::Features
[32m  should delegate to rollout[0m
  feature checks
[32m    should allow enabling the repository[0m
[32m    should return false if the repository's owner isn't activated[0m
[32m    should return true if the repository's owner is activated[0m
[32m    should be active when the repository was activated[0m
[32m    shouldn't be active when the repository was deactivated[0m
    for owners
[32m      allows enabling features for an organization[0m
[32m      allows disabling features for an owner[0m
[32m      allows enabling features for an owner[0m
    for features
[32m      should allow enabling features completely[0m
[32m      shouldn't be active when the feature was disabled completely[0m
    for users
[32m      should be active when enabled for a user[0m
[32m      shouldn't be active when disable for a user[0m

Travis::Services::FindAdmin
  find
    given an error occurs while retrieving the repository info
[33m      raises an exception (PENDING: Temporarily disabled with xit)[0m
[32m      does not revoke permissions[0m
    given a user does not have access to a repository
[33m      raises an exception (PENDING: Temporarily disabled with xit)[0m
[33m      revokes admin permissions for that user on our side (PENDING: Temporarily disabled with xit)[0m
    given a user has admin access to a repository (as seen by github)
[32m      returns that user[0m
    missing repository
[32m      raises Travis::RepositoryMissing[0m

Build::States
  events
    receive
[32m      does not denormalize attributes[0m
      when the build has failed
[32m        does not notify observers[0m
      when the build is already received
[32m        does not notify observers[0m
      when the build is not already received
[32m        sets the state to :received[0m
[32m        notifies observers[0m
      when the build has errored
[32m        does not notify observers[0m
    reset
[32m      does not set the state to created if any jobs in the matrix are running[0m
[32m      sets the state to created if none of the jobs in the matrix are running[0m
    cancel
[32m      cancels all the cancelable jobs[0m
    start
      when the build has failed
[32m        does not denormalize attributes[0m
[32m        does not notify observers[0m
      when the build is already started
[32m        does not denormalize attributes[0m
[32m        does not notify observers[0m
      when the build is not already started
[32m        notifies observers[0m
[32m        denormalizes attributes[0m
[32m        sets the state to :started[0m
      when the build has errored
[32m        does not denormalize attributes[0m
[32m        does not notify observers[0m
    finish
      when the matrix is not finished
        when the build is already finished
[32m          does not denormalize attributes[0m
[32m          does not notify observers[0m
      when the matrix is finished
        when the build has not finished
[32m          denormalizes attributes[0m
[32m          calculates the duration based on the matrix durations[0m
[32m          sets the state to the matrix state[0m
[32m          notifies observers[0m
        when the build has already finished
[32m          does not denormalize attributes[0m
[32m          does not notify observers[0m

Build denormalization
  on build:started
[32m    denormalizes last_build_number to its repository[0m
[32m    denormalizes last_build_state to its repository[0m
[32m    denormalizes last_build_id to its repository[0m
[32m    denormalizes last_build_duration to its repository[0m
[32m    denormalizes last_build_started_at to its repository[0m
[32m    denormalizes last_build_finished_at to its repository[0m
  on build:finished
[32m    denormalizes last_build_finished_at to its repository[0m
[32m    denormalizes last_build_duration to its repository[0m
[32m    denormalizes last_build_state to its repository[0m

Build matrix
  matrix_finished?
    if config[:matrix][:finish_fast] is not set
      if all jobs have finished
[32m        returns true[0m
      if at least one job has not finished and is allowed to fail
[32m        returns false[0m
      if at least one job has not finished and is not allowed to fail
[32m        returns false[0m
    if config[:matrix][:finish_fast] is set
      if all jobs have finished
[32m        returns true[0m
      if at least one job has not finished and is allowed to fail
[32m        returns true[0m
      if at least one job has not finished and is not allowed to fail
[32m        returns false[0m
  matrix_duration
    if the matrix is finished
[32m      returns the sum of the matrix job durations[0m
    if the matrix is not finished
[32m      returns nil[0m
  for Scala projects
[32m    with a single Scala version passed in as array and two env variables[0m
[32m    with multiple Scala versions and no env variables[0m
[32m    with a single Scala version given as a string[0m
  filter_matrix
[32m    does not select builds with non-matching keys[0m
[32m    does not select builds with non-matching values[0m
[32m    selects matching builds[0m
  does not explode
[32m    on config[:matrix] being an array[0m
[32m    on bad matrix include values[0m
[32m    on a config key that is `true`[0m
  os expansion
[32m    expands on :os if the feature is active[0m
[32m    ignores the os key if the feature is inactive[0m
  matrix with one allow_failure job
[32m    returns :passed[0m
  matrix_state
[32m    returns :passed if all jobs have passed[0m
[32m    returns :failed if one job has failed and one job has errored[0m
[32m    returns :errored if one job has errored[0m
[32m    returns :passed if a failed job is allowed to fail[0m
[32m    returns :failed if all jobs have failed and only one is allowed to fail[0m
[32m    returns :passed if all jobs have passed except a job that is allowed to fail, and config[:matrix][:finish_fast] is set[0m
[32m    returns :failed if all jobs have failed and only one is allowed to fail[0m
[32m    returns :passed if a errored job is allowed to fail[0m
[32m    returns :failed if one job has failed[0m
  dist_group_expansion
    the feature is active
[32m      expands on :dist and :group[0m
    the feature is inactive
[32m      does not expand on :dist or :group[0m
  for Ruby projects
    matrix expansion
[32m      with two Rubies and Gemfiles[0m
[32m      does not decrypt secure env vars[0m
[32m      with string values[0m
[32m      with unequal number of Rubies, env variables and Gemfiles[0m
[32m      with an array of Rubies and a single Gemfile[0m
    include_matrix_config
[32m      includes a matrix config[0m
[32m      does not include "empty" matrix config[0m
    expand_matrix
[32m      does not expand on :os[0m
[32m      sets the config to the jobs (no matrix config)[0m
[32m      sets the config to the jobs (single test config)[0m
[32m      ignores global env config when setting allow failures[0m
[32m      copies build attributes[0m
[32m      adds a sub-build number to the job number[0m
[32m      sets the config to the jobs (multiple tests config)[0m
[32m      sets the config to the jobs (no config)[0m
[32m      does not clobber env and global_env vars[0m
[32m      sets the config to the jobs (allow failures config)[0m
      when python project contains unwanted key
[32m        ignores irrelevant matrix dimensions[0m
      when ruby project contains unwanted key
[32m        ignores irrelevant matrix dimensions[0m
[32m        creates jobs whose config does not contain unwanted keys[0m
      when matrix specifies incorrect allow_failures
[32m        excludes matrices correctly[0m
      exclude_matrix_config
[32m        excludes jobs from a matrix config when the matrix exclusion definition is incomplete[0m
[32m        excludes a matrix config without specifying global env vars in the exclusion[0m
[32m        excludes a matrix config when all config items are defined in the exclusion[0m
  multi_os
    the feature is active
[32m      expands on :os[0m
    the feature is inactive
[32m      does not expand on :os[0m

Travis::DefaultSettings
[32m  doesn't allow to merge anything[0m
[32m  doesn't allow to set any values[0m
  getting properties
[32m    fetches a given path from default settings[0m

Travis::Addons::Archive::Task
[32m  runs the :archive_log service[0m
  instrument
[32m    publishes an event[0m

Travis::Services::FindAdmin::Instrument
[32m  publishes a event[0m

Travis::Api::V1::Http::Hooks
[32m  data[0m

Travis::Settings::Model
[32m  returns a default if it is set[0m
[32m  implements read_attribute_for_serialization method[0m
[32m  can be loaded from json[0m
[32m  allows to override attribute methods[0m
[32m  handles validations[0m
[32m  allows to overwrite values[0m
[32m  validates encrypted attributes properly[0m
[32m  allows to override the default[0m
[32m  coerces values by default[0m
[32m  does not coerce nil[0m
[32m  allows to update attributes[0m
[32m  creates an instance with attributes[0m
  encryption
[32m    returns EncryptedValue instance even for nil values[0m
[32m    automatically encrypts the data[0m

Travis::Addons::Slack::EventHandler
  targets
[32m    returns an array of multiple urls when given a comma separated string[0m
[32m    returns an array of urls when given an array[0m
[32m    returns an array of urls when given a string[0m
[32m    returns an array of values if the build configuration specifies an array of urls within a config hash[0m
  handler
[32m    triggers a task if the build is a pull request[0m
[32m    triggers a task if the build is a push request[0m
[32m    passes ssl key from repository to config[0m
[32m    triggers a task if rooms are present[0m
[32m    does not trigger a task if no rooms are present[0m
[32m    triggers a task if specified by the config[0m
[32m    does not trigger task if specified by the config[0m
  subscription
[32m    build:started does not notify[0m
[32m    build:finish notifies[0m

Travis::Addons::Webhook::EventHandler
  targets
[32m    returns an array of multiple urls when given a comma separated string[0m
[32m    returns an array of urls when given an array[0m
[32m    returns an array of urls when given a string[0m
[32m    returns an array of values if the build configuration specifies an array of urls within a config hash[0m
  handler
[32m    triggers a task if webhooks are present[0m
[32m    triggers a task if the build is a pull request[0m
[32m    triggers a task if the build is a push request[0m
[32m    does not trigger a task if no webhooks are present[0m
[32m    triggers a task if specified by the config[0m
[32m    does not trigger task if specified by the config[0m
  subscription
[32m    build:started notifies[0m
[32m    build:finish notifies[0m

Travis::Services::FindLog
  run
[32m    does not raise if the log could not be found[0m
[32m    finds the log with the given job_id[0m
[32m    finds the log with the given id[0m

AnnotationProvider
  .authenticate_provider
    given an invalid key
[32m      does not authenticate the provider[0m
    given an invalid username
[32m      does not authenticate the provider[0m
    given a valid username and key
[32m      authenticates the provider[0m
    with an encrypted key
[32m      authenticates the provider[0m
  #annotation_for_job
    given an annotation already exists for the job
[32m      returns the annotation[0m
    given no annotation exists yet for the job
[32m      returns a new annotation object[0m

Travis::Api::V1::Http::Builds
[32m  builds[0m

Travis::Github::Services::SetHook
  activating
[32m    does not update and existing hook if it is active[0m
[32m    updates and existing hook if it is inactive[0m
[32m    creates a new hook when none exists[0m
  deactivating
[32m    creates and updates the hook if github set the active value to true while creating[0m
[32m    updates and existing hook if it is active[0m
[32m    creates a new hook when none exists[0m
[32m    does not update and existing hook if it is inactive[0m

Travis::Event::Subscription
  triggering a notification
[32m    shouldn't notify when the event doesn't match[0m
[32m    should increment a counter when the event is triggered[0m
[32m    should notify when the event matches[0m
  a missing event handler
[32m    does not raise the exception[0m

Travis::SecureConfig
[32m  returns the original value if the config is not a hash[0m
[32m  decrypts a string[0m
[32m  decrypts with a string as a key[0m
[32m  decrypts a hash with a secure entry[0m
[32m  decrypts a complex object of nested arrays and strings[0m
[32m  keeps the string similar if it cannot be decoded[0m
[32m  decrypts a realistic complex build config[0m
[32m  decrypts an array with a secure entry and a string[0m
[32m  returns nil if secure is nil[0m

Build::Config
[32m  keeps the given env if it is an array[0m
[32m  normalizes env vars global and matrix which are hashes to an array of strings[0m
[32m  works fine if matrix part of env is undefined[0m
[32m  keeps wild nested array/hashes structure[0m
[32m  sets the os value to osx for objective-c builds[0m
[32m  sets the os value to linux for other builds[0m
[32m  works fine if global part of env is undefined[0m
[32m  keeps env vars global and matrix arrays[0m
[32m  normalizes an env vars hash to an array of strings[0m
[32m  keeps matrix and global config as arrays, not hashes[0m

Travis::Github::Services::SyncUser::Organizations::Filter
[32m  allows the organization if we can't get repositories count[0m
[32m  allows the organization if data is missing[0m
[32m  does not allow organizations with too many repos[0m

Travis::Addons::Flowdock::EventHandler
  targets
[32m    returns an array of multiple urls when given a comma separated string[0m
[32m    returns an array of urls when given an array[0m
[32m    returns an array of urls when given a string[0m
[32m    returns an array of values if the build configuration specifies an array of urls within a config hash[0m
  handler
[32m    triggers a task if rooms are present[0m
[32m    does not trigger a task if the build is a pull request[0m
[32m    triggers a task if the build is a push request[0m
[32m    does not trigger a task if no rooms are present[0m
[32m    triggers a task if specified by the config[0m
[32m    does not trigger task if specified by the config[0m
  subscription
[32m    build:started does not notify[0m
[32m    build:finish notifies[0m

Travis::Event::Config
  send_on_finished_for?
[32m    returns true for :webhooks if the previous build is missing, the current build failed and config is {:on_failure=>"always"}[0m
[32m    returns true for :webhooks if the previous build is missing, the current build passed and config is {:on_failure=>"always"}[0m
[32m    returns false for :webhooks if the previous build is missing, the current build passed and config is {:on_success=>"never"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build passed and config is {:on_failure=>"always"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build passed and config is {:on_failure=>"change"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build failed and config is {:on_success=>"change"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build failed and config is {:on_success=>"always"}[0m
[32m    returns false for :webhooks if the previous build failed, the current build passed and config is {:on_success=>"never"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build passed and config is {:on_success=>"always"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build failed and config is {:on_success=>"change"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build failed and config is {:on_success=>"never"}[0m
[32m    returns true for :webhooks if the previous build is missing, the current build passed and config is {:on_failure=>"never"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build failed and config is {:on_failure=>"always"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build passed and config is {:on_success=>"change"}[0m
[32m    returns false for :webhooks if the previous build passed, the current build failed and config is {:on_failure=>"never"}[0m
[32m    returns true for :webhooks if the previous build is missing, the current build passed and config is {:on_success=>"always"}[0m
[32m    returns true for :webhooks if the previous build is missing, the current build failed and config is {:on_success=>"always"}[0m
[32m    returns false for :webhooks if the previous build passed, the current build passed and config is {:on_success=>"change"}[0m
[32m    returns false for :webhooks if the previous build failed, the current build failed and config is {:on_failure=>"change"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build passed and config is {:on_failure=>"never"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build passed and config is {:on_failure=>"change"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build failed and config is {:on_success=>"never"}[0m
[32m    returns false for :webhooks if the previous build is missing, the current build failed and config is {:on_failure=>"never"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build passed and config is {:on_success=>"always"}[0m
[32m    returns true for :webhooks if the previous build is missing, the current build passed and config is {:on_success=>"change"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build passed and config is {:on_failure=>"never"}[0m
[32m    returns true for :webhooks if the previous build is missing, the current build passed and config is {:on_failure=>"change"}[0m
[32m    returns false for :webhooks if the previous build is missing, the current build failed and config is {:on_failure=>"change"}[0m
[32m    returns true for :webhooks if the previous build is missing, the current build failed and config is {:on_success=>"change"}[0m
[32m    returns false for :webhooks if the previous build failed, the current build failed and config is {:on_failure=>"never"}[0m
[32m    returns true for :webhooks if the previous build is missing, the current build failed and config is {:on_success=>"never"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build failed and config is {:on_failure=>"change"}[0m
[32m    returns true for :webhooks if the previous build failed, the current build failed and config is {:on_failure=>"always"}[0m
[32m    returns false for :webhooks if the previous build passed, the current build passed and config is {:on_success=>"never"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build failed and config is {:on_success=>"always"}[0m
[32m    returns true for :webhooks if the previous build passed, the current build passed and config is {:on_failure=>"always"}[0m

Travis::Notification::Instrument
  attach_to
[32m    subscribes to ActiveSupport::Notifications using the class name as a namespace[0m
[32m    subscribes to ActiveSupport::Notifications using an instrumentation key if defined[0m

Travis::Addons::Flowdock::Instruments::EventHandler
[32m  publishes a event[0m

Repository::StatusImage
  given a branch
[32m    returns :error if the last build on that branch has errored[0m
[32m    returns :failed if the last build on that branch has failed[0m
[32m    returns :passed if the last build on that branch has passed[0m
[32m    returns :canceled if the last build on that branch was canceled[0m
  given no branch
[32m    returns :error if the status of the last finished build is errored[0m
[32m    returns :failing if the status of the last finished build is failed[0m
[32m    returns the status of the last finished build[0m
[32m    returns :canceled if the status of the last finished build is canceled[0m
[32m    returns :unknown if the status of the last finished build is unknown[0m
  with cache
[32m    saves state of the build to the cache with its branch even if brianch is not given[0m
[32m    saves state to the cache if it needs to be fetched from the db[0m
[32m    tries to get state from cache first[0m
[32m    handles cache failures gracefully[0m

Repository::Settings
[32m  validates maximum_number_of_builds[0m
  #restricts_number_of_builds?
[32m    returns true if number of builds is restricted[0m
[32m    returns false if builds are not restricted[0m
  #maximum_number_of_builds
[32m    defaults to 0[0m
  env_vars
[32m    can be filtered to get only public vars[0m
  timeouts
    hard_limit
[32m      returns nil if set to 0[0m
[32m      is valid if hard_limit is nil[0m
[32m      defaults to nil[0m
[32m      is valid if hard_limit is set to 0[0m
      with :custom_timeouts feature flag turned off
[32m        adds an error message if invalid[0m
        is valid
[32m          if hard_limit is < 50[0m
[32m          if hard_limit is > 0[0m
[32m          if hard_limit is nil[0m
[32m          if hard_limit equals 50[0m
        is invalid
[32m          if hard_limit is < 0[0m
[32m          if hard_limit is > 50[0m
      with :custom_timeouts feature flag turned on
[32m        adds an error message if invalid[0m
        is valid
[32m          if hard_limit is < 180[0m
[32m          if hard_limit is > 0[0m
[32m          if hard_limit is nil[0m
[32m          if hard_limit equals 180[0m
        is invalid
[32m          if hard_limit is < 0[0m
[32m          if hard_limit is > 180[0m
    log_silence
[32m      returns nil if set to 0[0m
[32m      is valid if log_silence is nil[0m
[32m      defaults to nil[0m
[32m      is valid if log_silence is set to 0[0m
      with :custom_timeouts feature flag turned off
[32m        adds an error message if invalid[0m
        is valid
[32m          if log_silence is < 10[0m
[32m          if log_silence is > 0[0m
[32m          if log_silence is nil[0m
[32m          if log_silence equals 10[0m
        is invalid
[32m          if log_silence is < 0[0m
[32m          if log_silence is > 10[0m
      with :custom_timeouts feature flag turned on
[32m        adds an error message if invalid[0m
        is valid
[32m          if log_silence is < 60[0m
[32m          if log_silence is > 0[0m
[32m          if log_silence is nil[0m
[32m          if log_silence equals 60[0m
        is invalid
[32m          if log_silence is < 0[0m
[32m          if log_silence is > 60[0m

Travis::Addons::GithubStatus::EventHandler
  subscription
[32m    build:finish notifies[0m
[32m    build:started notifies[0m
[32m    build:created notifies[0m
[32m    build:canceled notifies[0m
  handler
[32m    triggers a task if the build is a push request and has finished[0m
[32m    triggers a task if the build is a pull request and has started[0m
[32m    triggers a task if the build is a push request and has started[0m
[32m    triggers a task if the build is a pull request and has finished[0m
[32m    gets the token for the build committer[0m
[32m    gets the token for someone with push access[0m
[32m    does not trigger a task if no tokens are available[0m

Build
[32m  is cancelable if at least one job is cancelable[0m
[32m  returns nil if cached_matrix_ids are not set[0m
[32m  caches matrix ids[0m
[32m  is not cancelable if none of the jobs are cancelable[0m
  creation
[32m    updates the last_build on the build's branch[0m
    previous_state
[32m      is set to the last finished build state on the same branch (disregards other branches)[0m
[32m      is set to the last finished build state on the same branch (disregards non-finished builds)[0m
[32m      is set to the last finished build state on the same branch[0m
  class methods
    on_branch
[32m      returns builds that are on any of the given branches[0m
[32m      does not include pull requests[0m
    was_started
[32m      returns builds that are either started or finished[0m
    recent
[32m      returns recent finished builds ordered by id descending[0m
    older_than
      when not passing a build
[32m        should limit the results[0m
      when a number is passed in
[32m        should limit the results[0m
[32m        should return older than the passed build[0m
      when a Build is passed in
[32m        should limit the results[0m
[32m        should return older than the passed build[0m
    paged
[32m      limits the results to the `per_page` value[0m
[32m      uses an offset[0m
    pushes
[32m      returns only builds which have Requests with an event_type of push[0m
    pull_requests
[32m      returns only builds which have Requests with an event_type of pull_request[0m
  #secure_env_enabled?
[32m    returns false if pull request is not from the same repository[0m
[32m    returns true if pull request is from the same repository[0m
[32m    returns true if we're not dealing with pull request[0m
  instance methods
[32m    sets previous_state to the result of the last build on the same branch if exists[0m
[32m    sets previous_state to nil if no last build exists on the same branch[0m
[32m    sets its number to the next build number on creation[0m
[32m    saves event_type before create[0m
[32m    saves pull_request_title before create[0m
[32m    saves branch before create[0m
    passed?
[32m      passed? returns true if state equals :passed[0m
[32m      passed? returns true if result does not equal :passed[0m
    pending?
[32m      returns true if the build is finished[0m
[32m      returns true if the build is not finished[0m
    config
[32m      defaults to a hash with language and os set[0m
[32m      deep_symbolizes keys on write[0m
    color
[32m      returns "yellow" if the build is pending[0m
[32m      returns "red" if the build has failed[0m
[32m      returns "green" if the build has passed[0m
    reset
[32m      resets each job if :reset_matrix is given[0m
[32m      resets related attributes[0m
[32m      sets the state to :created[0m
[32m      does not reset jobs if :reset_matrix is not given[0m
[32m      notifies obsevers[0m

Travis::Addons::Email::EventHandler
  #recipients
    when commit is on default branch
[32m      equals the recipients specified in the build configuration if any (given as an array)[0m
[32m      equals the recipients specified in the build configuration if any (given as a string)[0m
    when commit is on non-default branch
[32m      contains the author emails if the build has them set[0m
[32m      contains the committer emails if the build has them set[0m
  handler
[32m    triggers a task if specified by the config[0m
[32m    does not trigger a task if the build is a pull request[0m
[32m    triggers a task if the build is a push request[0m
[32m    does not trigger task if specified by the config[0m
  subscription
[32m    build:started does not notify[0m
[32m    build:finish notifies[0m

Travis::Addons::Pusher::Instruments::EventHandler
  given a job:started event
[32m    publishes a event[0m
  given a build:finished event
[32m    publishes a event[0m

Travis::Github::Services::SyncUser::Repositories::Instrument
[32m  publishes a event on :run[0m
[32m  publishes a event on :fetch[0m

Travis::Model::EncryptedColumn
[32m  allows to pass use_prefix as an option[0m
[32m  allows to pass key as an option[0m
  when encryption is disabled
    #dump
[32m      does not encrypt data[0m
  #decrypt?
[32m    does not decrypt if given data is empty[0m
  #encrypt?
[32m    does not encrypt if given data is empty[0m
    when disabled
[32m      does not encrypt[0m
  when encryption is enabled
    when prefix usage is disabled
      #load
[32m        decrypts data even with no prefix[0m
[32m        removes prefix if prefix is still used[0m
      #dump
[32m        attaches iv to encrypted string[0m
    when prefix usage is enabled
      #load
[32m        does not decrypt data if prefix is not used[0m
[32m        decrypts data if prefix is used[0m
      #dump
[32m        attaches iv and prefix to encrypted string[0m

Travis::Api::V0::Event::Build
[32m  includes the commit[0m
[32m  includes the repository data[0m
[32m  includes the build data[0m
[32m  doesn't include the source key[0m

Job
  before_create
[32m    sets the queue attribute[0m
[32m    sets the state attribute[0m
[32m    instantiates the log[0m
  .queued
[32m    returns jobs that are created but not started or finished[0m
  .result
[32m    returns 1 for failed builds[0m
[32m    returns 0 for passed builds[0m
  duration
[32m    returns the duration if both started_at and finished_at are populated[0m
[32m    returns nil if both finished_at is not populated[0m
[32m    returns nil if both started_at is not populated[0m
  obfuscated config
[32m    obfuscates env vars[0m
[32m    leaves regular vars untouched[0m
[32m    handles nil env[0m
[32m    normalizes env vars which are hashes to strings[0m
[32m    removes addons config if it is not a hash[0m
[32m    removes addons items which are not whitelisted[0m
[32m    removes source key[0m
    when job has secure env disabled
[32m      normalizes env vars which are hashes to strings[0m
[32m      works even if it removes all env vars[0m
[32m      removes secure env vars[0m
  #pull_request?
[32m    is delegated to commit[0m
  decrypted config
[32m    does not change original config[0m
[32m    normalizes env vars which are hashes to strings[0m
[32m    handles nil env[0m
[32m    leaves regular vars untouched[0m
    when job has secure env enabled
[32m      decrypts env vars[0m
[32m      decrypts only secure env vars[0m
    when addons are disabled
[32m      removes addons if it is not a hash[0m
[32m      removes addons items which are not whitelisted[0m
    when secure env is not enabled
[32m      removes secure env vars[0m
[32m      removes only secured env vars[0m
    when job has addons enabled
[32m      decrypts addons config[0m
[32m      decrypts deploy addon config[0m
  log_content=
[32m    sets the log content[0m
[32m    blanks out any old log content[0m

Travis::Api::V0::Pusher::Build
[32m  build[0m
[32m  repository[0m

Travis::Github::Services::FindOrCreateRepo
[33m  needs to be specified (PENDING: Temporarily disabled with xit)[0m

Travis::Services::SyncUser
  given the user is not currently syncing
[32m    enqueues a sync job[0m
[32m    sets the user to syncing[0m
  given the user is currently syncing
[32m    does not set the user to syncing[0m

Travis::Notification::Publisher::Redis
[33m  encodes the payload in json (PENDING: feature disabled at the moment)[0m
[32m  sets a ttl[0m
[33m  adds to the list (PENDING: feature disabled at the moment)[0m
[33m  queues new messages on the right (PENDING: feature disabled at the moment)[0m
[33m  sends out events over pubsub (PENDING: feature disabled at the moment)[0m

Travis::Services::FindRequest
  run
[32m    finds a request by the given id[0m
[32m    does not raise if the request could not be found[0m
  updated_at
[32m    returns request's updated_at attribute[0m

Travis::Api::V1::Http::Jobs
[32m  tests[0m

Travis::Addons::Campfire::EventHandler
  targets
[32m    returns an array of multiple urls when given a comma separated string[0m
[32m    returns an array of urls when given an array[0m
[32m    returns an array of urls when given a string[0m
[32m    returns an array of values if the build configuration specifies an array of urls within a config hash[0m
  handler
[32m    does not trigger a task if the build is a pull request[0m
[32m    triggers a task if the build is a push request[0m
[32m    passes ssl key from repository to config[0m
[32m    triggers a task if rooms are present[0m
[32m    does not trigger a task if no rooms are present[0m
[32m    triggers a task if specified by the config[0m
[32m    does not trigger task if specified by the config[0m
  subscription
[32m    build:started does not notify[0m
[32m    build:finish notifies[0m

Travis::Github::Services::SyncUser::Repository
  a public repository
    admin, push and pull access
[32m      creates a new permission for the user/repo[0m
[32m      updates an existing permission[0m
    push and pull access
[32m      creates a new permission for the user/repo[0m
[32m      updates an existing permission[0m
    only pull access
[32m      doesn't create a new permission for the user/repo[0m
[32m      destroys an existing permission[0m
  updating
[32m    updates repositorie's name and owner name[0m
  find or create repository
[32m    does not create a new repository if it already exists[0m
[32m    sets the owner[0m
[32m    creates a new repository per record if not yet present[0m
  a private repository
    admin, push and pull access
[32m      creates a new permission for the user/repo[0m
[32m      updates an existing permission[0m
    push and pull access
[32m      creates a new permission for the user/repo[0m
[32m      updates an existing permission[0m
    only pull access
[32m      creates a new permission for the user/repo[0m
[32m      updates an existing permission[0m

Travis::Api::V1::Http::Job
[32m  data[0m
  without log
[32m    returns null as a log content[0m
  with encrypted env vars
[32m    shows encrypted env vars in human readable way[0m

Travis::Api::V1::Archive::Build
  without log
[32m    returns null as a log content[0m

Travis::Github::Services::FetchConfig
  config
[32m    merges { '.result' => 'configured' } to the actual configuration[0m
[32m    yaml parses the response body if the response is successful[0m
[32m    returns a hash[0m
[32m    returns { '.result' => 'not_found' } if a 404 is returned[0m
[32m    returns { '.result' => 'server_error' } if a 500 is returned[0m
[32m    returns { '.result' => 'parse_error' } if the .travis.yml is invalid[0m
[32m    returns the error message for an invalid .travis.yml file[0m
[32m    converts non-breaking spaces to normal spaces[0m
    when the repository has the template_selection feature enabled
[32m      passes the 'group' config key through[0m
[32m      passes the 'dist' config key through[0m
    when the repository doesn't have the template_selection feature enabled
[32m      doesn't pass the 'group' config key through[0m
[32m      doesn't pass the 'dist' config key through[0m

Travis::Github::Services::SyncUser::ResetToken
[32m  resets the token on GitHub[0m
[32m  stores the new token[0m

Commit
  #range
    with invalid compare_url
[32m      returns nil[0m
    with a compare_url with ^ in it
[32m      returns range[0m
    with compare_url present
[32m      returns range[0m
    without compare_url
[32m      returns nil[0m
    for a pull request
[32m      returns range[0m
  pull_request?
[32m    is false for a ref named ref/pull/180/head[0m
[32m    is false for a ref named ref/branch/master[0m
[32m    is false for a nil ref[0m
[32m    is true for a ref named ref/pull/180/merge[0m
  pull_request_number
    when commit is from pull request
[32m      returns pull request's number[0m
    when commit is not from pull request
[32m      returns nil[0m

Build update_branch
  on build:started
[32m    creates branch if branch is missing[0m
[32m    updates branch if branch is exists[0m
  on build:finished
[32m    creates branch if branch is missing[0m
[32m    updates branch if branch is exists[0m

Travis::Services::FindJob
  run
[32m    raises RecordNotFound if a SubclassNotFound error is raised during find[0m
[32m    does not raise if the job could not be found[0m
[32m    finds the job with the given id[0m
[32m    includes config by default[0m
[32m    excludes config when requested[0m
  updated_at
[32m    returns jobs updated_at attribute[0m

Repository::Settings::SshKey
[32m  does not check key if a value is nil[0m
[32m  allows only private key[0m
[32m  validates correctness of private key[0m
  with a passphrase
[32m    returns key_with_a_passphrase validation error[0m

Travis::Settings::Collection
[32m  allows to create a model[0m
[32m  finds class in Travis::Settings namespace[0m
[32m  loads models from JSON[0m
  #destroy
[32m    removes an item from collection[0m
  #find
[32m    finds an item[0m

Travis::Requests::Services::Receive::Api
[32m  uses a custom message if given[0m
  request
[32m    returns attributes for a Request[0m
  commit
[32m    returns all attributes required for a Commit[0m
  repository
[32m    returns all attributes required for a Repository[0m

Travis::Api::V1::Http::Repositories
[32m  data[0m

Travis::Api::V1::Http::Repository
[32m  data[0m
[32m  public_key[0m

Travis::Addons::Hipchat::EventHandler
  targets
[32m    returns an array of multiple urls when given a comma separated string[0m
[32m    returns an array of urls when given an array[0m
[32m    returns an array of urls when given a string[0m
[32m    returns an array of values if the build configuration specifies an array of urls within a config hash[0m
  handler
[32m    doesn't trigger when pull request notifications are disabled[0m
[32m    triggers a task if the build is a pull request[0m
[32m    triggers a task if the build is a push request[0m
[32m    triggers a task if rooms are present[0m
[32m    does not trigger a task if no rooms are present[0m
[32m    triggers a task if specified by the config[0m
[32m    does not trigger task if specified by the config[0m
  subscription
[32m    build:started does not notify[0m
[32m    build:finish notifies[0m

Annotation
  validations
[32m    only allows http or https URLs[0m
[32m    only allows valid URLs[0m

Travis::Settings
[32m  returns validations without going through i18n[0m
[32m  allows to load from nil[0m
  adding a setting
[32m    allows to set a property using accessor[0m
[32m    sets false properly as boolean, not changing it to nil[0m
[32m    doesn't allow to set or get unknown settings[0m
  #update
[32m    updates an existing model[0m
[32m    creates a model if it does not exist yet[0m
  #delete
[32m    removes a model with a given name[0m
  registering a collection
[32m    allows to register a collection[0m
[32m    populates registered collections from raw settings[0m
  save
[32m    runs on_save callback[0m
[32m    does not run on_save callback if settings are not valid[0m
  #merge
[32m    does not allow to merge unknown settings[0m
[32m    merges individual fields[0m
[32m    does not save[0m
  to_hash
[32m    returns registered collections and all attributes[0m
  simple_attributes
[32m    returns only plan attributes[0m
  #create
[32m    creates a model for a given key[0m
[32m    adds additional attributes to the created model[0m

Travis::Event::Handler::Metrics
  subscription
[32m    job:test:finished notifies[0m
[32m    job:test:started notifies[0m
[32m    build:started does not notify[0m
  metrics
    job:test:started
[32m      meters on job.queue.wait_time[0m
[32m      meters on job.queue.builds-linux.wait_time[0m
      with started_at being nil
[32m        does not meters time[0m
    job:test:finished
[32m      meters on job.duration[0m
[32m      meters on job.duration[0m
      with finished being nil
[32m        does not meters time[0m

Build::Config::Matrix
[32m  can handle nil values in exclude matrix[0m
[32m  can handle list values in exclude matrix[0m

Travis::StatesCache
[32m  delegates #write to adapter[0m
[32m  gets data from build if it's given instead of raw data[0m
[32m  allows to fetch state[0m
[32m  delegates #fetch to adapter[0m
  integration
localhost:11211 failed (count: 0) Errno::ECONNREFUSED: Connection refused - Connection refused
[33m    updates the state if the id of the build is the same (PENDING: Dalli can't run properly, skipping. Cause: localhost:11211 is down:  . If you are sure it is running, ensure memcached version is > 1.4.)[0m
localhost:11211 failed (count: 0) Errno::ECONNREFUSED: Connection refused - Connection refused
[33m    updates the state only if the info is newer (PENDING: Dalli can't run properly, skipping. Cause: localhost:11211 is down:  . If you are sure it is running, ensure memcached version is > 1.4.)[0m
localhost:11211 failed (count: 0) Errno::ECONNREFUSED: Connection refused - Connection refused
[33m    saves the state for given branch and globally (PENDING: Dalli can't run properly, skipping. Cause: localhost:11211 is down:  . If you are sure it is running, ensure memcached version is > 1.4.)[0m
localhost:11211 failed (count: 0) Errno::ECONNREFUSED: Connection refused - Connection refused
[33m    handles connection errors gracefully (PENDING: Dalli can't run properly, skipping. Cause: localhost:11211 is down:  . If you are sure it is running, ensure memcached version is > 1.4.)[0m
  Travis::StatesCache::MemcachedAdapter
[32m    fetches the data for given id as JSON[0m
[32m    writes for both a branch and default state[0m
    #update?
[32m      returns true if persisted data is the same age[0m
[32m      returns false if persisted data is younger than data passed as an argument[0m
[32m      returns true if persisted data is older than data passed as an argument[0m

Travis::Services::FindCaches
  given a repository_id
    without any caches
[32m      should be == [][0m
    with caches
      with branch
        size
[32m          should be == 1[0m
      the cache instances
        repository
[32m          should be == #<Repository:0x6951332>[0m
        branch
[32m          should be == master[0m
        slug
[32m          should be == cache--example1[0m
        size
[32m          should be == 0[0m
      size
[32m        should be == 2[0m
      with match
        size
[32m          should be == 1[0m
      without access
        size
[32m          should be == 0[0m
      without s3 credentials
[32m        should be == [][0m
      with multiple buckets
        size
[32m          should be == 4[0m

Travis::Api::V0::Pusher::Annotation::Updated
[32m  annotation[0m

Travis::Requests::Services::Receive
  an API request
    giving the repo owner_id
      it should behave like creates a request
[32m        logs a notice[0m
[32m        sets the payload to the request[0m
[32m        creates a request for the given payload[0m
    giving the repo owner_name
      it should behave like creates a request
[32m        logs a notice[0m
[32m        sets the payload to the request[0m
[32m        creates a request for the given payload[0m
  a github pull-request event
    for a branch on a foreign repository
[32m      returns the expected head_branch[0m
[32m      returns the expected head_repo[0m
[32m      returns the expected base_repo[0m
      it should behave like creates a request
[32m        logs a notice[0m
[32m        sets the payload to the request[0m
[32m        creates a request for the given payload[0m
    for a branch on the same repository
[32m      returns the expected head_branch[0m
[32m      returns the expected head_repo[0m
[32m      returns the expected base_repo[0m
      it should behave like creates a request
[32m        logs a notice[0m
[32m        sets the payload to the request[0m
[32m        creates a request for the given payload[0m
    for a repository that belongs to an organization
[32m      sets the comments_url to the request[0m
      it should behave like creates a request
[32m        logs a notice[0m
[32m        sets the payload to the request[0m
[32m        creates a request for the given payload[0m
  a github push event
    for repository belonging to an organization
      it should behave like creates a request
[32m        logs a notice[0m
[32m        sets the payload to the request[0m
[32m        creates a request for the given payload[0m
    with disabled push events
[32m      rejects the request[0m
[32m      logs a notice[0m
      it should behave like creates a request
[32m        logs a notice[0m
[32m        sets the payload to the request[0m
[32m        creates a request for the given payload[0m
    for repository belonging to a user
      it should behave like creates a request
[32m        logs a notice[0m
[32m        sets the payload to the request[0m
[32m        creates a request for the given payload[0m
      when no commits are present
[32m        does not explode[0m
[32m        logs a message[0m
  with a repository that does not exist on our side
[32m    logs the validation error[0m
[32m    meters the event[0m
  with a repository that does not have an owner (should never happen?)
    with an known owner referenced in the payload
[32m      logs a notice[0m
[32m      updates the owner_name[0m
[32m      updates the owner[0m
    with an unknown owner referenced in the payload
[32m      logs the validation error[0m
[32m      meters the event[0m
  with a repository that has a different owner on our side (owner changed since last sync)
    with an known owner referenced in the payload
[32m      logs a notice[0m
[32m      updates the owner_name[0m
[32m      updates the owner[0m
    with an unknown owner referenced in the payload
[32m      logs the validation error[0m
[32m      meters the event[0m
  without repository data
    a push
[32m      logs the validation error[0m
    a pull request
[32m      logs the validation error[0m
  catches GH:Errors
[32m    during :accept?[0m
[32m    during :create[0m

Travis::Github::Services::FindOrCreateUser
[32m  updates repositories owner_name and nullifies other users or orgs' login if login is changed[0m
[32m  gets login from data if login is not available in find[0m
[32m  finds an existing user[0m
[32m  creates a user from github[0m
[32m  creates a user from github and nullifies login if other user has the same login[0m
[33m  raises a GithubApi error if the user could not be retrieved (PENDING: Temporarily disabled with xit)[0m

Travis::Api::V1::Webhook::Build::Finished
[32m  includes the build data[0m
[32m  includes the repository[0m
  includes the build matrix
[32m    given include_logs is false[0m
[32m    given include_logs is true[0m
[32m    payload[0m
[32m    has a different type for pull requests[0m
[32m    includes the pull request number for pull requests[0m

Token
[32m  generate_token sets the token to a 20 character value[0m
[32m  does not generate new token on save[0m

Travis::Addons::Pusher::EventHandler
[32m  doesn't override original payload[0m
  subscription
[32m    job:log[0m
[32m    job:test:started[0m
[32m    job:test:created[0m
[32m    job:test:finished[0m
[32m    build:created[0m
[32m    build:started[0m
[32m    build:finished[0m

Travis::Services::FindRepoSettings
  authorized?
[32m    should be unauthorized with current_user[0m
  run
[32m    should not be able to get settings if user does not have push permission[0m
[32m    should return repo settings[0m
[32m    should return nil without a repo[0m

Travis::Enqueue::Services::EnqueueJobs
  Instrument
[32m    publishes a event[0m
  run
[32m    keeps a report of enqueued jobs[0m
[32m    publishes queueable jobs[0m
[32m    enqueues queueable jobs[0m
  disabled?
[32m    does not enqueue if the feature :job_queueing is disabled explicitely[0m
[32m    enqueues if the feature :job_queueing is enabled explicitely[0m
[32m    enqueues if the feature :job_queueing is not deactivated (default)[0m
    with a timeout
[32m      returns false when the timeout is hit[0m
  Logging
[32m    logs the enqueue[0m

Travis::Api::V0::Pusher::Annotation::Created
[32m  annotation[0m

Request::Branches
  #included?
[32m    defaults to true if no branches are included[0m
    returns false if the included branches do not include the given branch
[32m      given as an array of branches[0m
[32m      given as a comma separated list of branches[0m
[32m      given as a string[0m
    returns true if the given branch matches a pattern from the included branches
[32m      given as an array of patterns[0m
[32m      given as a comma separated list of patterns[0m
[32m      given as a string[0m
    returns true if the included branches include the given branch
[32m      given as an array of branches[0m
[32m      given as a comma separated list of branches[0m
[32m      given as a string[0m
    returns false if the given branch does not match any pattern from the included branches
[32m      given as an array of patterns[0m
[32m      given as a comma separated list of patterns[0m
[32m      given as a string[0m
  #excluded?
[32m    defaults to false if no branches are excluded[0m
    returns false if the excluded branches do not include the given branch
[32m      given as an array of branches[0m
[32m      given as a comma separated list of branches[0m
[32m      given as a string[0m
    returns true if the given branch matches a pattern from the excluded branches
[32m      given as an array of patterns[0m
[32m      given as a comma separated list of patterns[0m
[32m      given as a string[0m
    returns true if the excluded branches include the given branch
[32m      given as an array of branches[0m
[32m      given as a comma separated list of branches[0m
[32m      given as a string[0m
    returns false if the given branch does not match any pattern from the excluded branches
[32m      given as an array of patterns[0m
[32m      given as a comma separated list of patterns[0m
[32m      given as a string[0m

Travis::Services::FindRepo
  run
[32m    does not raise if the repository could not be found[0m
[32m    finds a repository by the given owner_name and name[0m
[32m    finds a repository by the given id[0m
  updated_at
[32m    returns jobs updated_at attribute[0m

Travis::Services::RemoveLog::Instrument
[32m  publishes a event[0m

Travis::Services::ResetModel
  given a job_id
[32m    has message: missing permissions and can not be enqueued[0m
[32m    has message: all cool[0m
[32m    resets the job[0m
  given a build_id
[32m    does not reset the build (given no roles configuration and the user does not have permissions)[0m
[32m    resets the build (given roles configuration and the user has permissions)[0m
[32m    resets the build (given no roles configuration and the user has permissions)[0m
[32m    does not reset the build (given roles configuration and the user does not have permissions)[0m
    Instrument
[32m      publishes a event[0m

Travis::Addons::Hipchat::Instruments::EventHandler
[32m  publishes a event[0m

Travis::Requests::Services::Receive::Instrument
[32m  publishes a event[0m

Travis::Logs::Services::Receive
[32m  creates a log part with the given number[0m
[32m  filters out triple null chars[0m
[32m  does not set the :final flag if the appended message does not contain the final log message part[0m
[32m  notifies observers[0m
[32m  doesn't reraise an error when notifications failed[0m
[32m  creates a log if missing (should never happen, but does)[0m
[32m  tracks a metric when notifications failed[0m
[32m  sets the :final flag if the appended message contains the final log message part[0m
[32m  filters out null chars[0m

Travis::Services::FindRepoKey
  run
[32m    finds a key by the given repository id[0m
[32m    finds a key by the given owner_name and name[0m
  updated_at
[32m    returns key's updated_at attribute[0m

Travis::Api::V0::Worker::Job::Test
  for a push request
[32m    contains the expected build data (legacy)[0m
[32m    contains the expected job data[0m
[32m    contains the expected data[0m
[32m    contains the expected repo data[0m
[32m    includes the tag name[0m
[32m    contains the no pull_request data[0m
  for a pull request
[32m    contains the expected build data (legacy)[0m
[32m    contains the expected job data[0m
[32m    contains the expected data[0m
[32m    contains the expected repo data[0m
[32m    contains the expected pull_request data[0m
    from the same repository
[32m      enables secure env variables[0m

Travis::Github::Services::SyncUser::Organizations
  run
[32m    removes stale organization memberships[0m
    updates existing organizations
[32m      makes the user a member of the organization[0m
[32m      updates the organization attributes[0m
[32m      does not create a new organization[0m
    creates missing organizations
[32m      creates missing organizations[0m
[32m      makes the user a member of the organization[0m
    with organization with repos over limit
[32m      does not create organization matching "exclude" list[0m

Broadcast
  by_user
[32m    finds a global broadcast[0m
[32m    does not find a broadcast for a different user[0m
[32m    finds a broadcast for orgs where the given user is a member[0m
[32m    finds a broadcast for a repo where the given user has any permissions[0m
[32m    does not find a broadcast for a different repo[0m
[32m    does not find broadcasts older than 2 weeks[0m
[32m    does not find an expired broadcast[0m
[32m    does not find a broadcast for a different org[0m
[32m    finds a broadcast for the given user[0m
  by_repo
[32m    does not find a broadcast for a different repo[0m
[32m    finds a broadcast for the given repo[0m
[32m    finds a global broadcast[0m
[32m    finds a broadcast for an org this repo belongs to[0m
[32m    does not find a broadcast for a different org[0m
[32m    finds a broadcast for a user this repo belongs to[0m
[32m    does not find a broadcast for a different user[0m

Travis::Api::V1::Http::Build
[32m  build[0m
[32m  matrix[0m
  with encrypted env vars
[32m    shows encrypted env vars in human readable way[0m

Travis::Github::Services::FetchConfig::Instrument
[32m  strips an access_token if present (2)[0m
[32m  strips an access_token if present (1)[0m
[32m  publishes a payload[0m
[32m  strips a secret if present (2)[0m

Travis::Api::V1::Archive::Build
[32m  repository[0m
[32m  matrix[0m
[32m  data[0m

Travis
  redis
[32m    should connect to localhost by default[0m
    with Travis.config
[32m      should use the Travis.config if set[0m

Repository
[32m  last_build returns the most recent build[0m
  #last_completed_build
[32m    returns last completed build[0m
[32m    returns last completed build for a branch[0m
  class methods
    with_builds
[32m      gets only projects with existing builds[0m
    timeline
[32m      sorts repositories with running builds to the top, most recent builds next, un-built repos last[0m
[32m      does not include invalidated repos[0m
    find_by
[32m      should find a repository by it's name and owner_name[0m
[32m      should find a repository by it's id[0m
[32m      should find a repository by it's github_id[0m
[32m      returns nil when a repository couldn't be found using params[0m
    active
[32m      does not include invalidated repositories[0m
[32m      does not include inactive repositories[0m
[32m      contains active repositories[0m
    search
[32m      performs searches with \ entered[0m
[32m      performs searches with / entered[0m
[32m      performs searches case-insensitive[0m
[32m      does not find invalidated repos[0m
    by_member
[32m      returns all repositories a user has rights to[0m
[32m      does not find invalidated repos[0m
    counts_by_owner_names
[32m      returns repository counts per owner_name for the given owner_names[0m
  source_url
    default source endpoint
[32m      returns the public git source url for a public repository[0m
[32m      returns the private git source url for a private repository[0m
    custom source endpoint
[32m      returns the private git source url for a public repository[0m
[32m      returns the private git source url for a private repository[0m
  last_finished_builds_by_branches
[32m    properly orders branches by last build[0m
[32m    retrieves last builds on all branches[0m
  #users_with_permission
[32m    returns users with the given permission linked to that repository[0m
  branches
[32m    returns branches for the given repository[0m
[32m    is empty for empty repository[0m
  associations
    owner
[32m      can be a user[0m
[32m      can be an organization[0m
  #regenerate_key!
[32m    regenerates key[0m
  settings
[32m    allows to set nil for settings[0m
[32m    is reset on reload[0m
[32m    adds repository_id to collection records[0m
[32m    allows to set settings as JSON string[0m
[32m    allows to set settings as a Hash[0m
[32m    updates settings in the DB[0m
  api_url
[32m    returns the api url for the repository[0m
  source_host
[32m    returns the source_host name from Travis.config[0m
  keys
[32m    should return the public key[0m
[32m    should create a new key when the repository is created[0m

Travis::Addons::Campfire::Instruments::EventHandler
[32m  publishes a event[0m

User
  educational_org
[32m    returns true if organization is flagged as educational_org[0m
[32m    returns false if the organization has not been flagged as educational_org[0m

User
  find_or_create_for_oauth
[32m    marks new users as such[0m
[32m    updates changed attributes[0m
  organization_ids
[32m    contains the ids of organizations that the user is a member of[0m
[32m    does not contain the ids of organizations that the user is not a member of[0m
  profile_image_hash
[32m    returns 32 zeros if no gravatar_id or email is set[0m
[32m    returns a MD5 hash of the email if no gravatar_id and an email is set[0m
[32m    returns gravatar_id if it's present[0m
  correct_scopes?
[32m    accepts additional scopes[0m
[32m    complains about missing scopes[0m
[32m    accepts correct scopes[0m
  inspect
    when user has GitHub OAuth token
[32m      does not include the user's GitHub OAuth token[0m
    when user has no GitHub OAuth token
[32m      indicates nil GitHub OAuth token[0m
  service_hooks
[32m    includes all repositories if :all options is passed[0m
[32m    does not contain repositories where the user does not have an admin role[0m
[32m    contains repositories where the user has an admin role[0m
  permission?
[32m    given a condition it returns true if the user has a matching permission[0m
[32m    given roles and a condition it returns false if the user does not have a matching permission for this role[0m
[32m    given roles and a condition it returns true if the user has a matching permission for this role[0m
[32m    given a condition it returns true if the user has a matching permission[0m
  #to_json
[32m    returns JSON representation of user[0m
  track_github_scopes
[32m    it resolves github scopes if they haven't been resolved already[0m
[32m    it resolves github scopes if the token did change[0m
[32m    does not resolve github scopes if the token didn't change[0m
[32m    returns an empty list if the token is missing[0m
  repository_ids
[32m    contains the ids of repositories the user is permitted to see[0m
[32m    does not contain the ids of repositories the user is not permitted to see[0m
  authenticate_by
    given a wrong login
[32m      does not authenticate the user[0m
    given a wrong token
[32m      does not authenticate the user[0m
    given a valid token and login
[32m      authenticates the user[0m
    with encrypted token
[32m      authenticates the user[0m

Travis::Notification::Publisher::Log
[32m  defaults to INFO[0m
[32m  prints out the :msg value[0m
[32m  writes to Travis.logger[0m
[32m  uses ERROR if an exception occured[0m
[32m  does not include extra information if no exception occured[0m
[32m  does include extra information if an exception occured[0m

Travis::Task
  run_local?
[32m    can be set to true on a child class without affecting other classes[0m
[32m    can be set to true manually[0m
[32m    is false by default[0m
[32m    can be set to true through a feature flag[0m
[32m    can be set to false through a feature flag[0m

Travis::Github::Services::SyncUser::Organizations::Instrument
[32m  publishes a event on :run[0m
[32m  publishes a event on :fetch[0m

Travis::Services::RegenerateRepoKey
  given the request is authorized
[32m    regenerates the key[0m
  given the request is not authorized
[32m    does not regenerate key[0m

Travis::Config
  endpoints
[32m    allows to set keys on enpoints when it is nil[0m
[32m    returns endpoints if it is set[0m
[32m    returns an object even without endpoints entry[0m
  defaults
[32m    notifications defaults to [][0m
[32m    ampq.host defaults to "localhost"[0m
[32m    queue.limit.by_owner defaults to {}[0m
[32m    logs.shards defaults to 1[0m
[32m    database[0m
[32m    queue.interval defaults to 3[0m
[32m    queues defaults to [][0m
[32m    notifications.email defaults to {}[0m
[32m    queue.interval defaults to 3[0m
[32m    ampq.prefetch defaults to 1[0m
[32m    queue.limit.default defaults to 5[0m

Travis::Services::FindHooks
[32m  does not find repositories where the current user does not have admin access[0m
[32m  finds repositories where the current user has admin access[0m
[32m  finds repositories where the current user has access with :all option[0m
[32m  finds repositories by a given owner_name where the current user has admin access[0m
[32m  does not find repositories by a given owner_name where the current user does not have admin access[0m

Travis::Services::FindUserAccounts
[32m  includes accounts where the user has admin access[0m
[32m  includes the user[0m
[32m  includes all repositories with :all param[0m
[32m  does not include accounts where the user does not have admin access[0m
[32m  includes repository counts[0m

Travis::Addons::Webhook::Instruments::EventHandler
[32m  publishes a event[0m

Job::Test
[32m  is cancelable if the job has not finished yet[0m
[32m  is not cancelable if the job has already been finished[0m
  cancelling
[32m    should set canceled_at and finished_at on job[0m
[32m    should put a build into canceled state if all the jobs in matrix are in finished state[0m
[32m    should not propagate cancel state to source[0m
  events
    finish
[32m      propagates the event to the source[0m
[32m      notifies observers[0m
[32m      sets the state to the given result state[0m
    start
[32m      propagates the event to the source[0m
[32m      notifies observers[0m
[32m      sets the state to :started[0m
    receive
[32m      resets the log content[0m
[32m      sets the worker from the payload[0m
[32m      sets the state to :received[0m
[32m      notifies observers[0m
[32m      propagates the event to the source[0m
[32m      sets log's removed_at and removed_by to nil[0m
    reset
[32m      resets log attributes[0m
[32m      resets job attributes[0m
[32m      sets the state to :created[0m
[32m      recreates log if it's removed[0m
[33m      clears log parts (PENDING: Temporarily disabled with xit)[0m
[32m      destroys annotations[0m
[32m      triggers a :created event[0m

Travis::Services::UpdateJob
  event: start
[32m    sets the build state to started[0m
[32m    sets the job started_at[0m
[32m    sets the job state to started[0m
[32m    sets the build started_at[0m
[32m    sets the build state to started[0m
[32m    sets the repository last_build_state to started[0m
[32m    sets the repository last_build_started_at[0m
    when job is canceled
[32m      does not update state[0m
  event: receive
[32m    sets the job worker name[0m
[32m    sets the job received_at[0m
[32m    sets the job state to received[0m
[32m    sets the build state to received[0m
[32m    sets the build received_at[0m
[32m    sets the build state to received[0m
    when job is canceled
[32m      does not update state[0m
  #cancel_job_in_worker
[32m    sends cancel event to the worker[0m
  event: finish
[32m    sets the build state to passed[0m
[32m    sets the job finished_at[0m
[32m    sets the job state to passed[0m
[32m    sets the build finished_at[0m
[32m    sets the repository last_build_state to passed[0m
[32m    sets the repository last_build_finished_at[0m
    when job is canceled
[32m      does not update state[0m
  compat
[32m    swaps :result for :state (passed) if present[0m
[32m    swaps :result for :state (failed) if present[0m
  event: reset
[32m    resets the job worker name[0m
[32m    resets the job started_at[0m
[32m    sets the job state to created[0m
[32m    resets the build state to started[0m
[32m    resets the build started_at[0m
[32m    resets the build state to started[0m
[32m    resets the repository last_build_state to started[0m
[32m    resets the repository last_build_started_at[0m

Travis::Github::Services::FindOrCreateOrg
[32m  updates repositories owner_name and nullifies other users or orgs' login if login is changed[0m
[32m  gets login from data if login is not available in find[0m
[32m  finds an existing organization[0m
[32m  creates an organization from github[0m
[32m  creates a organization from github and nullifies login if other organization has the same login[0m
[33m  raises a GithubApi error if the organization could not be retrieved (PENDING: Temporarily disabled with xit)[0m

Travis::Logs::Services::Aggregate
[32m  aggregates logs where no parts have been added for [force interval] seconds[0m
[32m  does not aggregates logs where no parts have been added for [regular interval] seconds and the final flag is not set[0m
[32m  aggregates logs where no parts have been added for [regular interval] seconds and the final flag is set[0m
[32m  aggregates parts to log.content[0m
  aggregate
[32m    sets aggregated_at[0m
[32m    appends to an existing log[0m
[32m    aggregates the content parts[0m
[32m    deletes the content parts from the parts table[0m
[32m    triggers a log:aggregated event[0m
  rollback
    rolls back if log aggregation fails
      behaves like rolled_back_log_aggregation
[32m        does not delete parts[0m
[32m        does not set the content[0m
[32m        does not set aggregated_at[0m
[32m        handles the exception[0m
    rolls back if parts deletion fails
      behaves like rolled_back_log_aggregation
[32m        does not delete parts[0m
[32m        does not set the content[0m
[32m        does not set aggregated_at[0m
[32m        handles the exception[0m

Travis::Services::FindBuild
  with newer associated record
[32m    returns updated_at of newest result[0m
  updated_at
[32m    returns builds updated_at attribute[0m
  run
[32m    includes config by default[0m
[32m    does not raise if the build could not be found[0m
[32m    finds a build by the given id[0m
[32m    excludes config when requested[0m
  without updated_at in one of the resources
[32m    returns updated_at of newest result[0m

Request
  config_url
[32m    returns the api url to the .travis.yml file on github[0m
[32m    returns the api url to the .travis.yml file on github with a gh endpoint given[0m
  pull_request?
[32m    returns true if the event_type is pull_request[0m
[32m    returns false if the event_type is not pull_request[0m
  pull_request_title
[32m    returns the title of the pull request from payload[0m
[32m    returns nil for non pull request[0m
  branch_name
[32m    returns a branch name if available[0m
[32m    returns nil if a branch name is not available[0m
  #head_repo
[32m    returns a branch name if available[0m
[32m    returns nil if this is not a pull request[0m
  same_repo_pull_request?
[32m    returns false if repo data is not available[0m
[32m    returns false if the base and head repos do not match[0m
[32m    returns true if the base and head repos match[0m
  #head_branch
[32m    returns a branch name if available[0m
[32m    returns nil if this is not a pull request[0m
  tag_name
[32m    returns a tag name if available[0m
[32m    returns nil if a tag name is not available[0m
  api_request?
[32m    returns true if the event_type is api[0m
[32m    returns false if the event_type is not api[0m

Build::Metrics
[32m  measures on "travis.builds.start.delay"[0m
[32m  measures the time it takes from creating the request until starting the build[0m

Build::ResultMessage
  email
[32m    returns :pending if the build is pending[0m
[32m    returns :failed if the build has failed for the first time[0m
[32m    returns :passed if the build has passed again[0m
[32m    returns :fixed if the build was fixed[0m
[32m    returns :failing if the build has failed again[0m
[32m    returns :canceled if the build has canceled[0m
[32m    returns :errored if the build has errored[0m
[32m    returns :broken if the build was broken[0m
[32m    returns :passed if the build has passed for the first time[0m
  full
[32m    returns :pending if the build is pending[0m
[32m    returns :failed if the build has failed for the first time[0m
[32m    returns :passed if the build has passed again[0m
[32m    returns :fixed if the build was fixed[0m
[32m    returns :failing if the build has failed again[0m
[32m    returns :canceled if the build has canceled[0m
[32m    returns :errored if the build has errored[0m
[32m    returns :broken if the build was broken[0m
[32m    returns :passed if the build has passed for the first time[0m
  short
[32m    returns :pending if the build is pending[0m
[32m    returns :failed if the build has failed for the first time[0m
[32m    returns :passed if the build has passed again[0m
[32m    returns :fixed if the build was fixed[0m
[32m    returns :failing if the build has failed again[0m
[32m    returns :canceled if the build has canceled[0m
[32m    returns :errored if the build has errored[0m
[32m    returns :broken if the build was broken[0m
[32m    returns :passed if the build has passed for the first time[0m

Travis::Services::CancelBuild
  run
[32m    should not be able to cancel job if user does not have any permissions[0m
[32m    should not cancel the job if it's not cancelable[0m
[32m    should cancel the build if it's cancelable[0m

Travis::Addons::GithubStatus::Instruments::EventHandler
[32m  publishes a event for push events[0m
[32m  publishes a event for pull request events[0m

Travis::Services::NextBuildNumber
  with a new repository
[32m    returns 1[0m
[32m    initializes the next_build_number[0m
  with an existing repository
[32m    returns the next_build_number[0m
[32m    increments the next_build_number[0m

Travis::Api::V0::Pusher::Job::Started
[32m  data[0m
[32m  should return commit data[0m

Travis::Github::Services::SyncUser::UserInfo
[32m  calls update_attributes! and emails.find_or_create_by_email![0m
[32m  raises an error if github_id does not match[0m
  login
[32m    should == "rkh"[0m
  gravatar_id
[32m    should == "5c2b452f6eea4a6d84c105ebd971d2a4"[0m
  name
[32m    should == "Konstantin Haase"[0m
  email
[32m    should == "konstantin.haase@gmail.com"[0m
  verified_emails
[32m    should == ["konstantin.mailinglists@gmail.com", "konstantin.mailinglists@googlemail.com"][0m
  no public email
    no primary email
      email
[32m        should == "konstantin.mailinglists@gmail.com"[0m
      no verified email
        email
[32m          should == "konstantin.haase@gmail.com"[0m
        no email on file
          email
[32m            should == "konstantin@Konstantins-MacBook-Air.local"[0m
    missing github scope
      email
[32m        should == "konstantin.haase@gmail.com"[0m
    email
[32m      should == "konstantin.mailinglists@googlemail.com"[0m
  login changed
    login
[32m      should == "RKH"[0m
  name changed
    name
[32m      should == "RKH"[0m

Log
  #clear!
[32m    resets aggregated_at[0m
[32m    resets content[0m
[32m    clears log parts[0m
[32m    resets archived_at[0m
[32m    resets archive_verified[0m
  content
[32m    if aggregated returns the aggregated parts[0m
[32m    while not aggregated it appends to an existing log[0m
[32m    while not aggregated it returns the aggregated parts[0m
  class methods
[32m    is archived only when archive is verified[0m
    #to_json
[32m      returns JSON representation of the record[0m

Travis::Addons::Slack::Instruments::EventHandler
[32m  publishes a event[0m

Travis::Services::FindRequests
  run
[32m    raises an error if repository params are missing[0m
[32m    finds requests older than the given id[0m
[32m    finds recent requests when older_than is not given[0m
[32m    scopes to the given repository_id[0m
[32m    raises when the repository could not be found[0m
[32m    limits requests if limit is passed[0m
[32m    limits requests to Travis.config.services.find_requests.max_limit if limit is higher[0m
[32m    limits requests to Travis.config.services.find_requests.default_limit if limit is not given[0m

Travis::Services::UpdateUser
[32m  updates the locale if valid[0m
[32m  does not update the locale if invalid[0m

Travis::TravisYmlStats
[32m  owner_type and owner_id are set[0m
  .travis.yml language key
    when `language: [ 'ruby', 'python' ]'
[32m      sets the language key to 'invalid'[0m
    when not specified
[32m      sets the language key to nil[0m
    when `language: ruby'
[32m      sets the language key to 'ruby'[0m
    when `language: objective c'
[32m      retains the space[0m
  sudo being used in a command
    sudo is used in a command
[32m      sets the uses_sudo key to true[0m
    sudo is not used in any commands
[32m      sets the uses_sudo key to false[0m
  a push
[32m    sets the event_type to 'push'[0m
  when payload contains a single deployment provider
[32m    reports deployment count correctly[0m
  when payload contains multiple deployment providers
[32m    reports deployment count correctly[0m
  when payload contains notifications
[32m    reports deployment count correctly[0m
  when payload contains multiple deployment providers of the same type
[32m    reports deployment count correctly[0m
  a request without 'group' key
[32m    sets the group_name key to 'default'[0m
  .travis.yml ruby key
    when `ruby: [ '2.1.2', 2.0 ]'
[32m      sets the language_version.ruby key to ['2.0', '2.1.2'][0m
    when `ruby: [ '2.1.2', '2.0.0' ]'
[32m      sets the language_version.ruby key to ['2.0.0', '2.1.2'][0m
    when `ruby: 2.1.2'
[32m      sets the language_version.ruby key to ['2.1.2'][0m
  repository language reported by GitHub
    no language reported
[32m      sets the github_language key to nil[0m
    F#
[32m      sets the github_language key to 'F#'[0m
    Ruby
[32m      sets the github_language key to 'Ruby'[0m
  a request with 'group' key
[32m    sets the group_name key to 'dev'[0m
  apt-get being used in a command
    apt-get is used in a command
[32m      sets the uses_apt_get key to true[0m
    apt-get is not used in any commands
[32m      sets the uses_apt_get key to false[0m
  a pull_request
[32m    sets the event_type to 'pull_request'[0m
  a request without 'dist' key
[32m    sets the dist_name key to 'default'[0m
  a request with 'dist' key
[32m    sets the dist_name key to 'trusty'[0m
  a build with two jobs
[32m    sets the matrix_size to 2[0m

Travis::Addons::Pushover::EventHandler
  users
[32m    returns an array of multiple user keys when given a comma separated string[0m
[32m    returns an array of user keys when given an array[0m
[32m    returns an array of user keys when given a string[0m
[32m    returns an array of values if the build configuration specifies an array of user keys within a config hash[0m
  handler
[32m    does not trigger a task if the build is a pull request[0m
[32m    triggers a task if the build is a push request[0m
[32m    passes ssl key from repository to config[0m
[32m    triggers a task if users and api_key are present[0m
[32m    does not trigger a task if no users are present[0m
[32m    does not trigger a task if no api_key is present[0m
[32m    triggers a task if specified by the config[0m
[32m    does not trigger task if specified by the config[0m
  subscription
[32m    build:started does not notify[0m
[32m    build:finish notifies[0m

Permission
  by_roles
[32m    returns an empty scope if no roles given[0m
[32m    returns a single permission if one role given[0m
[32m    returns matching permissions if two roles given as symbols[0m

Travis::Api::V1::Http::Branches
[32m  data[0m

Travis::Addons::Pushover::Instruments::EventHandler
[32m  publishes a event[0m

Travis::Requests::Services::Receive::PullRequest
  request
[32m    returns all attributes required for a Request[0m
  repository
[32m    returns all attributes required for a Repository[0m
  accept
    given action is "synchronize"
[32m      returns true if head has changed[0m
[32m      returns false if base has not changed[0m
    given action is "reopened"
[32m      returns true[0m
    given action is "opened"
[32m      rejects when the feature is disabled[0m
[32m      rejects it if there is no merge commit[0m
[32m      returns true[0m
    given action is "comment"
[32m      returns false[0m
  commit
[32m    returns all attributes required for a Commit[0m

Build::Config::Obfuscate
[32m  obfuscates env vars[0m
[32m  leaves regular vars untouched[0m
[32m  normalizes env vars which are hashes to strings[0m
[32m  obfuscates env vars which are not in nested array[0m
[32m  works with nil values[0m
[32m  does not make an empty env key an array but leaves it empty[0m
[32m  removes source key[0m

Travis::Services::FindBranch
[32m  returns an empty build scope when the repository could not be found[0m
[32m  scopes to the given repository[0m
[32m  finds the last builds of the given repository and branch[0m
[32m  finds branches by a given id[0m

Travis::Chunkifier
  with bigger chunk_size
[32m    should keep parts under chunk_size taking into account conversion to json and bytes[0m
  with UTF-8 chars
[32m    should keep parts under chunk_size taking into account conversion to json and bytes[0m
    parts
[32m      should == ["𤭢abc", "ą"][0m
  with newlines
    parts
[32m      should == ["01\n234501\n2", "34501\n2345"][0m

Travis::Services::UpdateHook::Instrument
[32m  publishes a event[0m

Request::States
[32m  has the state :created when just created[0m
  finish
    with a config parse error
[32m      builds the build[0m
[32m      prints an error to the log[0m
    with an unapproved request
[32m      does not build the build[0m
[32m      sets the state to finished[0m
    with an approved request
[32m      builds the build[0m
[32m      sets the state to finished[0m
    with a config server error
[32m      builds the build[0m
[32m      prints an error to the log[0m
  configure
[32m    stores the config on the request[0m
[32m    merges existing configuration (e.g. from an api request)[0m
[32m    fetches the .travis.yml config from Github[0m
[32m    sets the state to configured[0m
  start
    with an accepted request
[32m      sets the state to started[0m
[32m      finishes the request[0m
[32m      configures the request[0m
[32m      sets the result to :accepted[0m
      but rejected config
[32m        does config, but resets it to nil[0m
      but rejected branch
[32m        does config, but resets it to nil[0m
    with a rejected request
[32m      sets the state to started[0m
[32m      finishes the request[0m
[32m      does not configure the request[0m
[32m      sets the result to :rejected[0m
  start!
[32m    finally sets the state to finished[0m
  adding a build
[32m    shouldn't notify the build when the flag is disabled[0m
[32m    should notify the build[0m
[32m    should create a build[0m

Url
  #short_url
[32m    returns the full short url[0m
  #code
[32m    sets the code automatically[0m
  .shorten
[32m    creates a new Url object if the url has not been shortened[0m
[32m    retrieves a Url which has already been shortened[0m

SslKey
[32m  is a SslKey[0m
  encrypt
[32m    encrypts something[0m
[32m    is decryptable[0m
  generate_keys!
[32m    generates a new public key even if one already exists[0m
[32m    generates a new private key even if one already exists[0m
  generate_keys
[32m    does not generate a new public key if one already exists[0m
[32m    generates the private key[0m
[32m    generates the public key[0m
[32m    does not generate a new private key if one already exists[0m
  decrypt
[32m    decrypts something[0m
  encoding
[32m    generates the correct key format to export to github[0m
[32m    encodes the private key properly for the build[0m

Travis::Api::V1::Http::User
[32m  data[0m

Travis::Services::FindBuilds
  run
[32m    finds builds older than the given number[0m
[32m    finds recent builds when no repo given[0m
[32m    finds recent builds when empty params given[0m
[32m    finds builds with a given number, scoped by repository[0m
[32m    does not find by number if repository_id is missing[0m
[32m    scopes to the given repository_id[0m
[32m    returns an empty build scope when the repository could not be found[0m
[32m    finds builds by a given list of ids[0m
    finds recent builds when event_type
[32m      given as api[0m
[32m      given as pull_request[0m
[32m      given as push[0m
[32m      given as [push, api][0m

Travis::Services::FindDailyTestsStats
[32m  should return the jobs per day[0m

Travis::Addons::StatesCache::EventHandler
  handler
[32m    build:finished updates the cache[0m

Travis::Api
  data
[32m    returns the data from the builder instance[0m
    instantiates a builder and returns the data
[32m      given an object that responds to :base_class (aka ActiveRecord::Base)[0m
[32m      given an object that responds to :klass (aka Arel::Relation)[0m
    #builder
[32m      does not raise an error if constant name is wrong[0m
[32m      returns nil if only part of the constant is matched[0m
[32m      finds given constant[0m

Request::Approval
  config_accepted?
[32m    approves the build when .travis.yml is present[0m
[32m    does not approve the build if .travis.yml is missing and builds without it are not allowed[0m
[32m    approves the build when .travis.yml is missing, but builds with .travis.yml are allowed[0m
  approved?
[33m    should be specified (PENDING: Temporarily disabled with xit)[0m
  message
[32m    returns "pull requests disabled" if pull requests are disabled[0m
[32m    returns "missing commit" if the commit is missing[0m
[32m    returns "private repository" if the repository is private[0m
[32m    returns "excluded repository" if the repository is an excluded repository and exclude rule is a string[0m
[32m    returns "github pages branch" if the branch is a github pages branch[0m
[32m    returns "branch not included or excluded" if the branch was not approved[0m
[32m    returns "missing config" if the config is not present[0m
[32m    returns "excluded repository" if the repository is an excluded repository[0m
[32m    returns "pushes disabled" if pushes are disabled[0m
  included_repository?
[32m    returns false if the repository is not included[0m
[32m    returns true if the repository is an included repository with rule as a string[0m
[32m    returns true if the repository is an included repository[0m
[32m    returns false if the repository is not included with rule as a string[0m
  excluded_repository?
[32m    returns true if the repository is an excluded repository with rule as a string[0m
[32m    returns false if the repository is not excluded[0m
[32m    returns true if the repository is an excluded repository[0m
[32m    returns false if the repository is not excluded with rule as a string[0m
  enabled_in_settings?
[32m    returns true if pushes are enabled and a request is a push[0m
[32m    returns true if pull requests are enabled and a request is a pull request[0m
[32m    returns true if a request is an api request[0m
[32m    returns false if pull requests are disabled and a request is a pull request[0m
[32m    returns false if pushes are disabled and a request is a push[0m
  skipped?
[32m    returns true when the commit message contains [ci skip][0m
  accepted?
[32m    does not accept a request that belongs to a private repository[0m
[32m    does not accept a request that does not have a commit[0m
[32m    accepts a request that has a commit, belongs to a public repository, is not skipped and does not belong to the github_pages branch and it is not a rails fork[0m
[32m    does not accept a request that belongs to an excluded repository[0m
[32m    does not accept a request that is skipped (using the commit message)[0m
[32m    accepts a request that belongs to the github_pages branch and is explicitly set to build that branch (String)[0m
[32m    accepts a request that belongs to the github_pages branch and is explicitly set to build that branch (Array)[0m
[32m    does not accept a request when it is disabled in settings[0m
  branch_accepted?
[32m    doesn't fail when the branch configuration is an array[0m
[32m    accepts a request that belongs to the gh-pages branch if it's specified in branches:only[0m
[32m    does not accept a request that belongs to the github_pages branch[0m
  github_pages?
[32m    returns true when a PR is for gh_pages[0m
[32m    returns true for a branch named gh_pages[0m
[32m    returns true for a branch named gh-pages[0m
[32m    returns false for a branch named master[0m

User::Oauth
  find_or_create_by
[32m    updates changed attributes[0m
[32m    does not mark existing users as recently_signed_up[0m
[32m    marks users as recently_signed_up[0m
  attributes_from
[32m    returns required data[0m

Travis::Services::FindDailyReposStats
[32m  should include the date[0m
[32m  should include the number per day[0m

Travis::Addons::Archive::EventHandler
  instrument
[32m    publishes an event[0m
  handler
[32m    runs the archive task[0m
  subscription
[32m    build:started does not notify[0m
[32m    log:aggregated notifies[0m

Travis::Addons::Irc::EventHandler
  channels
[32m    returns an array of urls when given a string on the channels key[0m
[32m    returns an array of urls when given an array[0m
[32m    returns an array of urls when given a string[0m
[32m    returns an array of urls when given an array on the channels key[0m
  handler
[32m    triggers a task if channels are present[0m
[32m    does not trigger a task if the build is a pull request[0m
[32m    triggers a task if the build is a push request[0m
[32m    does not trigger a task if no channels are present[0m
[32m    triggers a task if specified by the config[0m
[32m    does not trigger task if specified by the config[0m
  subscription
[32m    build:started does not notify[0m
[32m    build:finish notifies[0m

Travis::Services::UpdateAnnotation
[32m  returns nil when given invalid provider credentials[0m
  when annotation is enabled
[32m    creates the annotation if it doesn't exist already[0m
[32m    updates an existing annotation if one exists[0m
  when annotation is disabled
[32m    returns nil[0m

Travis::Github::Services::SyncUser::Repositories
[32m  removes repositories from the user's permissions which are not listed in the data from github[0m
[32m  fetches the user's orgs' repositories[0m
[32m  fetches the user's repositories[0m
  given type is set to private
[32m    synchronizes each of the private repositories[0m
[32m    does not synchronize public repositories[0m
  given type is set to public
[32m    synchronizes each of the public repositories[0m
[32m    does not synchronize private repositories[0m
  given type is set to "public,private"
[32m    synchronizes all the repositories[0m
  with private forks of organization repositories
[32m    should sync the organization's repository when it has admin rights[0m
[32m    should sync the organization's repository when it's not a duplicate[0m
[32m    should not sync the organization's duplicate[0m

Job::Queue
[32m  returns builds.linux as the default queue[0m
[32m  returns builds.common as the default queue if configured to in Travis.config[0m
  when "sudo" value matches the given configuration hash
[32m    returns the matching queue[0m
[32m    returns the matching queue when language is also given[0m
  Queue.for
[32m    returns the queue when language matches the given configuration hash[0m
[32m    returns the queue when slug matches the given configuration hash[0m
[32m    returns the default build queue when neither slug or language match the given configuration hash[0m
[32m    returns the queue when the owner matches the given configuration hash[0m
[32m    returns the queue when sudo requirements matches the given configuration hash[0m
[32m    returns the docker queue by default for educational repositories[0m
[32m    returns the queue matching configuration for educational repository[0m
[32m    handles language being passed as an array gracefully[0m
    when "docker_default_queue" feature is active
[32m      returns "builds.docker" when sudo: nil and the repo created_at is nil[0m
[32m      returns "builds.linux" when sudo: nil and the repo created_at is after cutoff and sudo is detected[0m
[32m      returns "builds.docker" when sudo: false and the repo created_at is after cutoff[0m
[32m      returns "builds.linux" when sudo: required and the repo created_at is after cutoff[0m
[32m      returns "builds.linux" when sudo: required and the repo created_at is before cutoff[0m
[32m      returns "builds.linux" when sudo: true and the repo created_at is before cutoff[0m
[32m      returns "builds.linux" when sudo: nil and the repo created_at is before cutoff[0m
[32m      returns "builds.docker" when sudo: nil and the repo created_at is after cutoff[0m
[32m      returns "builds.linux" when sudo: required and the repo created_at is nil[0m
[32m      returns "builds.docker" when sudo: false and the repo created_at is nil[0m
[32m      returns "builds.docker" when sudo: false and the repo created_at is before cutoff[0m
[32m      returns "builds.linux" when sudo: true and the repo created_at is nil[0m
[32m      returns "builds.linux" when sudo: true and the repo created_at is after cutoff[0m
    when "services" value matches the given configuration hash
[32m      returns the matching queue[0m
[32m      returns the matching queue when language is also given[0m
    when "os" value matches the given configuration hash
[32m      returns the matching queue[0m
[32m      returns the matching queue when language is also given[0m
  Queue.sudo_detected?
[32m    returns true for {:before_install=>["# no sudo", "ping -c 1 google.com"]}[0m
[32m    returns false for {:bogus=>"sudo echo"}[0m
[32m    returns true for {:script=>"sudo echo"}[0m
[32m    returns true for {:before_install=>["docker run busybox echo whatever"]}[0m
[32m    returns true for {:before_script=>["echo ; echo ; echo ; sudo echo ; echo"]}[0m
[32m    returns false for {:install=>"# no sudo needed here"}[0m
[32m    returns false for {:install=>true}[0m
  Queue.queues
[32m    returns an array of Queues for the config hash[0m
  matches?
[32m    returns false when services do not match[0m
[32m    returns true when the given owner matches[0m
[32m    returns false when sudo is not specified[0m
[32m    returns true when dist matches[0m
[32m    returns false when dist does not match[0m
[32m    returns true when osx_image matches[0m
[32m    returns true when sudo is false[0m
[32m    returns true when services match[0m
[32m    returns true for percentage: 100[0m
[32m    returns false when neither of slug or language match[0m
[32m    returns false when sudo is true[0m
[32m    returns true when the given language matches[0m
[32m    returns true when os is missing[0m
unknown matchers used for queue builds.invalid: foobar_donotmatch
[32m    returns false if no valid matchers are specified[0m
[32m    returns false for percentage: 0[0m
[32m    returns true when the given slug matches[0m
[32m    returns false when osx_image does not match[0m

Travis::Github::Education
[32m  returns empty hash on error response[0m
[32m  returns empty hash on json parse error[0m
[32m  fetches student data[0m
  student?
[32m    is true when student field is true in the response[0m

Travis::Services::FindAnnotations
  run
[32m    finds annotations by a given list of ids[0m
[32m    finds annotations by job_id[0m

Travis::Requests::Services::Receive::Push
  repository
[32m    returns all attributes required for a Repository[0m
  commit
[32m    returns the last skipped commit if all commits are skipped[0m
[32m    returns the last commit that isn't skipped[0m
[32m    returns all attributes required for a Commit[0m
    branch processing
[32m      returns travis when ref is ref/heads/travis[0m
[32m      returns master when ref is ref/heads/master[0m
[32m      returns head_commit if commits info is not present[0m
[32m      returns features/travis-ci when ref is ref/heads/features/travis-ci[0m

Pending:
[33m  Travis::Services::FindJobs updated_at returns the latest updated_at time[0m
[36m    # rack cache is disabled, so not much need for caching now[0m
[36m    # ./spec/travis/services/find_jobs_spec.rb:58[0m
[33m  Travis::Services::FindAdmin find given an error occurs while retrieving the repository info raises an exception[0m
[36m    # Temporarily disabled with xit[0m
[36m    # ./spec/travis/services/find_admin_spec.rb:46[0m
[33m  Travis::Services::FindAdmin find given a user does not have access to a repository raises an exception[0m
[36m    # Temporarily disabled with xit[0m
[36m    # ./spec/travis/services/find_admin_spec.rb:29[0m
[33m  Travis::Services::FindAdmin find given a user does not have access to a repository revokes admin permissions for that user on our side[0m
[36m    # Temporarily disabled with xit[0m
[36m    # ./spec/travis/services/find_admin_spec.rb:33[0m
[33m  Travis::Github::Services::FindOrCreateRepo needs to be specified[0m
[36m    # Temporarily disabled with xit[0m
[36m    # ./spec/travis/github/services/find_or_create_repo_spec.rb:11[0m
[33m  Travis::Notification::Publisher::Redis encodes the payload in json[0m
[36m    # feature disabled at the moment[0m
[36m    # ./spec/travis/notification/publisher/redis_spec.rb:31[0m
[33m  Travis::Notification::Publisher::Redis adds to the list[0m
[36m    # feature disabled at the moment[0m
[36m    # ./spec/travis/notification/publisher/redis_spec.rb:17[0m
[33m  Travis::Notification::Publisher::Redis queues new messages on the right[0m
[36m    # feature disabled at the moment[0m
[36m    # ./spec/travis/notification/publisher/redis_spec.rb:41[0m
[33m  Travis::Notification::Publisher::Redis sends out events over pubsub[0m
[36m    # feature disabled at the moment[0m
[36m    # ./spec/travis/notification/publisher/redis_spec.rb:49[0m
[33m  Travis::StatesCache integration updates the state if the id of the build is the same[0m
[36m    # Dalli can't run properly, skipping. Cause: localhost:11211 is down:  . If you are sure it is running, ensure memcached version is > 1.4.[0m
[36m    # ./spec/travis/states_cache_spec.rb:78[0m
[33m  Travis::StatesCache integration updates the state only if the info is newer[0m
[36m    # Dalli can't run properly, skipping. Cause: localhost:11211 is down:  . If you are sure it is running, ensure memcached version is > 1.4.[0m
[36m    # ./spec/travis/states_cache_spec.rb:57[0m
[33m  Travis::StatesCache integration saves the state for given branch and globally[0m
[36m    # Dalli can't run properly, skipping. Cause: localhost:11211 is down:  . If you are sure it is running, ensure memcached version is > 1.4.[0m
[36m    # ./spec/travis/states_cache_spec.rb:47[0m
[33m  Travis::StatesCache integration handles connection errors gracefully[0m
[36m    # Dalli can't run properly, skipping. Cause: localhost:11211 is down:  . If you are sure it is running, ensure memcached version is > 1.4.[0m
[36m    # ./spec/travis/states_cache_spec.rb:90[0m
[33m  Travis::Github::Services::FindOrCreateUser raises a GithubApi error if the user could not be retrieved[0m
[36m    # Temporarily disabled with xit[0m
[36m    # ./spec/travis/github/services/find_or_create_user_spec.rb:82[0m
[33m  Job::Test events reset clears log parts[0m
[36m    # Temporarily disabled with xit[0m
[36m    # ./spec/travis/model/job/test_spec.rb:174[0m
[33m  Travis::Github::Services::FindOrCreateOrg raises a GithubApi error if the organization could not be retrieved[0m
[36m    # Temporarily disabled with xit[0m
[36m    # ./spec/travis/github/services/find_or_create_org_spec.rb:83[0m
[33m  Request::Approval approved? should be specified[0m
[36m    # Temporarily disabled with xit[0m
[36m    # ./spec/travis/model/request/approval_spec.rb:96[0m

Finished in 171.61 seconds
[33m1458 examples, 0 failures, 17 pending[0m

Randomized with seed 26584

travis_time:end:17376fe8:start=1447267265303834656,finish=1447267457295779784,duration=191991945128
[0K
[32;1mThe command "./build.sh" exited with 0.[0m
travis_fold:start:cache.2
[0Kstore build cache
travis_time:start:194ad2e8
[0Kchange detected:
/home/travis/build/travis-ci/travis-core/vendor/bundle/jruby/1.9/bundler/gems/gh-27e30fd01f6d/.git/index
/home/travis/build/travis-ci/travis-core/vendor/bundle/jruby/1.9/bundler/gems/gh-27e30fd01f6d/.git/index
/home/travis/build/travis-ci/travis-core/vendor/bundle/jruby/1.9/bundler/gems/travis-sidekiqs-21a2fee158e2/.git/index
/home/travis/build/travis-ci/travis-core/vendor/bundle/jruby/1.9/bundler/gems/travis-sidekiqs-21a2fee158e2/.git/index
/home/travis/build/travis-ci/travis-core/vendor/bundle/jruby/1.9/bundler/gems/travis-support-2cd02d2a06fd/.git/index
/home/travis/build/travis-ci/travis-core/vendor/bundle/jruby/1.9/bundler/gems/travis-support-2cd02d2a06fd/.git/index

changes detected, packing new archive
uploading archive
travis_time:end:194ad2e8:start=1447267457300334477,finish=1447267463659669554,duration=6359335077
[0Ktravis_fold:end:cache.2
[0K
[31;1mArtifacts support disabled for pull requests[0m


Done. Your build exited with 0.
